local Library = {}


function Library:Create(xHubName)


	xHubName = xHubName or "Epic-Hub"

	local LibraryName = tostring(math.random(100000, 200000)) .. tostring(math.random(100000, 200000)) .. tostring(math.random(100000, 200000))

	function Library:ToggleUI()
		if game.CoreGui[LibraryName].Enabled then
			game.CoreGui[LibraryName].Enabled = false
		else
			game.CoreGui[LibraryName].Enabled = true
		end
	end

	local TweenService = game:GetService("TweenService")

	-- Function to animate opacity (fade in)
	local function fadeIn(element, duration)
		local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
		local tween = TweenService:Create(element, tweenInfo, { BackgroundTransparency = 0 })
		tween:Play()
	end

	-- Function to animate opacity (fade out)
	local function fadeOut(element, duration)
		local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
		local tween = TweenService:Create(element, tweenInfo, { BackgroundTransparency = 1 })
		tween:Play()
	end


	-- Instances
	local ScreenScript = Instance.new("ScreenGui")
	local LoadingFrame = Instance.new("Frame")
	local LoadingText = Instance.new("TextLabel")
	local LoadingSound = Instance.new("Sound")
	local Main = Instance.new("Frame")
	local ShadowHolder = Instance.new("Frame")
	local UmbraShadow = Instance.new("ImageLabel")
	local PenumbraShadow = Instance.new("ImageLabel")
	local AmbientShadow = Instance.new("ImageLabel")
	local Headerframe = Instance.new("Frame")
	local Close = Instance.new("ImageButton")
	local ImageLabel = Instance.new("ImageLabel")
	local UIScale = Instance.new("UIScale")
	local Title = Instance.new("TextButton")
	local UIPadding = Instance.new("UIPadding")
	local FirstSeperator = Instance.new("Frame")
	local Siderframe = Instance.new("Frame")
	local ActualSide = Instance.new("ScrollingFrame")
	local ActualSideListLayout = Instance.new("UIListLayout")
	local TextButton = Instance.new("TextButton")
	local UICorner_2 = Instance.new("UICorner")
	local Tabholder = Instance.new("Frame")
	local Tabs = Instance.new("Folder")
	local UICorner_3 = Instance.new("UICorner")
	local TabLayout = Instance.new("UIListLayout")
	local ImageButtonK = Instance.new("ImageButton")
	local ImageButtonKCorner = Instance.new("UICorner")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")

	-- ScreenGui setup
	ScreenScript.Name = LibraryName
	ScreenScript.Parent = game.CoreGui
	ScreenScript.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	ScreenScript.ResetOnSpawn = false

	-- Loading Frame setup
	LoadingFrame.Name = "LoadingFrame"
	LoadingFrame.Parent = ScreenScript
	LoadingFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	LoadingFrame.BorderSizePixel = 0
	LoadingFrame.Position = UDim2.new(0.25, 0, 0.25, 0)
	LoadingFrame.Size = UDim2.new(0.5, 0, 0.5, 0)

	LoadingText.Name = "LoadingText"
	LoadingText.Parent = LoadingFrame
	LoadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	LoadingText.BackgroundTransparency = 1.000
	LoadingText.Size = UDim2.new(1, 0, 1, 0)
	LoadingText.Font = Enum.Font.GothamBold
	LoadingText.Text = "Loading..."
	LoadingText.TextColor3 = Color3.fromRGB(161, 161, 161)
	LoadingText.TextScaled = true
	LoadingText.TextSize = 14.000
	LoadingText.TextWrapped = true

	LoadingSound.Name = "LoadingSound"
	LoadingSound.Parent = ScreenScript
	LoadingSound.Volume = 1
	LoadingSound.SoundId = "rbxassetid://253277644"  -- Replace with your sound asset ID
	
	local UIScale = Instance.new("UIScale")
	UIScale.Parent = LoadingFrame  -- Example of applying UIScale to Main frame
	UIScale.Scale = 0.9  -- Adjust the scale factor as needed
	
	
	-- Main Frame setup
	Main.Name = "Main"
	Main.Parent = ScreenScript
	Main.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Main.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.272804052, 0, 0.243107766, 0)
	Main.Size = UDim2.new(0.481064528, 0, 0.602093697, 0)
	Main.ZIndex = 1
	Main.Visible = false
	
	local UIScale2 = Instance.new("UIScale")
	UIScale2.Parent = Main  -- Example of applying UIScale to Main frame
	UIScale2.Scale = 0.9  -- Adjust the scale factor as needed
	
	
	
	-- Shadow Holder Frame setup
	ShadowHolder.Name = "ShadowHolder"
	ShadowHolder.Parent = Main
	ShadowHolder.BackgroundTransparency = 1.000
	ShadowHolder.Size = UDim2.new(1, 0, 1, 0)
	ShadowHolder.ZIndex = 0
	
	
	-- Umbra Shadow setup
	UmbraShadow.Name = "UmbraShadow"
	UmbraShadow.Parent = ShadowHolder
	UmbraShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	UmbraShadow.BackgroundTransparency = 1.000
	UmbraShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	UmbraShadow.Size = UDim2.new(1, 30, 1, 30)  -- Adjust size to cover Main frame
	UmbraShadow.ZIndex = 0
	UmbraShadow.Image = "rbxassetid://1316045217"
	UmbraShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	UmbraShadow.ImageTransparency = 0.860
	UmbraShadow.ScaleType = Enum.ScaleType.Slice
	UmbraShadow.SliceCenter = Rect.new(10, 10, 118, 118)

	-- Penumbra Shadow setup
	PenumbraShadow.Name = "PenumbraShadow"
	PenumbraShadow.Parent = ShadowHolder
	PenumbraShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	PenumbraShadow.BackgroundTransparency = 1.000
	PenumbraShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	PenumbraShadow.Size = UDim2.new(1, 30, 1, 30)  -- Adjust size to cover Main frame
	PenumbraShadow.ZIndex = 0
	PenumbraShadow.Image = "rbxassetid://1316045217"
	PenumbraShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	PenumbraShadow.ImageTransparency = 0.880
	PenumbraShadow.ScaleType = Enum.ScaleType.Slice
	PenumbraShadow.SliceCenter = Rect.new(10, 10, 118, 118)

	-- Ambient Shadow setup
	AmbientShadow.Name = "AmbientShadow"
	AmbientShadow.Parent = ShadowHolder
	AmbientShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	AmbientShadow.BackgroundTransparency = 1.000
	AmbientShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	AmbientShadow.Size = UDim2.new(1, 30, 1, 30)  -- Adjust size to cover Main frame
	AmbientShadow.ZIndex = 0
	AmbientShadow.Image = "rbxassetid://1316045217"
	AmbientShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	AmbientShadow.ImageTransparency = 0.880
	AmbientShadow.ScaleType = Enum.ScaleType.Slice
	AmbientShadow.SliceCenter = Rect.new(10, 10, 118, 118)

	-- Header Frame setup
	Headerframe.Name = "Headerframe"
	Headerframe.Parent = Main
	Headerframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Headerframe.BackgroundTransparency = 1.000
	Headerframe.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Headerframe.BorderSizePixel = 0
	Headerframe.Size = UDim2.new(0, 525, 0, 37)
	Headerframe.ZIndex = 2

	-- Close Button setup
	Close.Name = "Close"
	Close.Parent = Headerframe
	Close.Active = false
	Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Close.BackgroundTransparency = 1.000
	Close.Position = UDim2.new(0.917412579, 0, 0.167417377, 0)
	Close.Selectable = false
	Close.Size = UDim2.new(0, 33, 0, 22)
	Close.ZIndex = 3

	ImageLabel.Parent = Close
	ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.Position = UDim2.new(0.500000775, 1, 0.545454264, 0)
	ImageLabel.Size = UDim2.new(0, 21, 0, 21)
	ImageLabel.Image = "rbxassetid://7743878857"
	ImageLabel.ZIndex = 3

	UIScale.Parent = ImageLabel
	UIScale.Scale = 0.700

	-- Title setup
	Title.Name = "Title"
	Title.Parent = Headerframe
	Title.Active = false
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.00192685076, 0, 0, 0)
	Title.Selectable = false
	Title.Size = UDim2.new(0, 323, 0, 36)
	Title.Font = Enum.Font.GothamMedium
	Title.Text = xHubName
	Title.TextColor3 = Color3.fromRGB(161, 161, 161)
	Title.TextScaled = true
	Title.TextSize = 13.000
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title.ZIndex = 2

	UIPadding.Parent = Title
	UIPadding.PaddingLeft = UDim.new(0, 10)

	-- First Separator setup
	FirstSeperator.Name = "FirstSeperator"
	FirstSeperator.Parent = Main
	FirstSeperator.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
	FirstSeperator.BorderSizePixel = 0
	-- Continuing from the previous snippet...

	FirstSeperator.Position = UDim2.new(-2.58091513e-05, 0, 0.116352201, 0)
	FirstSeperator.Size = UDim2.new(0, 525, 0, 1)
	FirstSeperator.ZIndex = 5

	-- Siderframe setup
	Siderframe.Name = "Siderframe"
	Siderframe.Parent = Main
	Siderframe.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Siderframe.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Siderframe.BorderSizePixel = 0
	Siderframe.Position = UDim2.new(-0.00190476188, 0, 0.119496852, 0)
	Siderframe.Size = UDim2.new(0, 199, 0, 280)
	Siderframe.ZIndex = 2

	-- ActualSide ScrollingFrame setup
	ActualSide.Name = "ActualSide"
	ActualSide.Parent = Siderframe
	ActualSide.Active = true
	ActualSide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ActualSide.BackgroundTransparency = 1.000
	ActualSide.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ActualSide.BorderSizePixel = 0
	ActualSide.Size = UDim2.new(0, 198, 0, 239)
	ActualSide.ScrollBarThickness = 2
	ActualSide.ZIndex = 2

	-- ActualSideListLayout setup
	ActualSideListLayout.Name = "ActualSideListLayout"
	ActualSideListLayout.Parent = ActualSide
	ActualSideListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	-- TextButton inside Siderframe setup
	TextButton.Parent = Siderframe
	TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextButton.BackgroundTransparency = 1.000
	TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextButton.BorderSizePixel = 0
	TextButton.Position = UDim2.new(-0.00502512557, 0, 0.853571415, 0)
	TextButton.Size = UDim2.new(0, 200, 0, 41)
	TextButton.Font = Enum.Font.SourceSans
	TextButton.Text = "Place ID"
	TextButton.TextColor3 = Color3.fromRGB(0, 255, 157)
	TextButton.TextScaled = true
	TextButton.TextSize = 14.000
	TextButton.TextWrapped = true
	TextButton.ZIndex = 2

	-- UICorner for TextButton setup
	UICorner_2.CornerRadius = UDim.new(0, 5)
	UICorner_2.Parent = TextButton

	-- Tabholder setup
	Tabholder.Name = "Tabholder"
	Tabholder.Parent = Main
	Tabholder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Tabholder.BackgroundTransparency = 1.000
	Tabholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Tabholder.BorderSizePixel = 0
	Tabholder.Position = UDim2.new(0.375238091, 0, 0.119496852, 0)
	Tabholder.Size = UDim2.new(0, 327, 0, 280)
	Tabholder.ZIndex = 2


	Tabs.Name = "Tabs"
	Tabs.Parent = Tabholder

	-- UICorner for Tabholder setup
	UICorner_3.CornerRadius = UDim.new(0, 12)
	UICorner_3.Parent = Tabholder

	-- TabLayout setup
	TabLayout.Name = "TabLayout"
	TabLayout.Parent = Tabholder
	TabLayout.SortOrder = Enum.SortOrder.LayoutOrder

	-- ImageButtonK setup
	ImageButtonK.Name = "ImageButtonK"
	ImageButtonK.Parent = ScreenScript
	ImageButtonK.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageButtonK.BackgroundTransparency = 1.000
	ImageButtonK.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageButtonK.BorderSizePixel = 0
	ImageButtonK.Position = UDim2.new(0.219957083, 0, 0.0619834736, 0)
	ImageButtonK.Size = UDim2.new(0.044799991, 0, 0.0651629046, 0)
	ImageButtonK.Image = "rbxassetid://15771991482"
	ImageButtonK.Visible = true

	-- UICorner for ImageButtonK setup
	local ImageButtonKCorner = Instance.new("UICorner")
	ImageButtonKCorner.CornerRadius = UDim.new(0, 12)
	ImageButtonKCorner.Name = "ImageButtonKCorner"
	ImageButtonKCorner.Parent = ImageButtonK

	-- UIAspectRatioConstraint for ImageButtonK setup
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	UIAspectRatioConstraint.Parent = ImageButtonK
	UIAspectRatioConstraint.AspectRatio = 1.404

	-- Assuming the fadeIn and fadeOut functions are defined as shown previously

	-- ImageButtonK click handler
	ImageButtonK.MouseButton1Click:Connect(function()
		if Main.Visible then
			fadeOut(Main, 0.3)  -- Fade out Main frame
			Main.Visible = false
			--fadeOut(ShadowHolder, 0.3)  -- Fade out ShadowHolder frame
		else
			fadeIn(Main, 0.3)  -- Fade in Main frame
			--fadeIn(ShadowHolder, 0.3)  -- Fade in ShadowHolder frame
			Main.Visible = true

		end
	end)

	-- Close button click handler
	Close.MouseButton1Click:Connect(function()
		--fadeOut(Main, 0.3)
		wait(0.3)  -- Delay to ensure fade out completes
		ScreenScript:Destroy()  -- Destroy the ScreenScript
	end)

	-- Initial state: show loading frame, hide main and shadow
	LoadingFrame.Visible = true
	Main.Visible = false
	ImageButtonK.Visible = false
	ShadowHolder.Visible = false

	-- Simulate loading process
	print("Starting loading...")

	-- Simulated loading animation
	local loadingPhrases = {"Loading", "Loading.", "Loading..", "Loading..."}
	local currentPhraseIndex = 1
	local loadingInterval = 0.5  -- Interval in seconds between each loading text change

	local function updateLoadingText()
		LoadingText.Text = loadingPhrases[currentPhraseIndex]
		currentPhraseIndex = currentPhraseIndex + 1
		if currentPhraseIndex > #loadingPhrases then
			currentPhraseIndex = 1
		end
	end

	-- Start loading animation coroutine
	local loadingAnimation = coroutine.create(function()
		while LoadingFrame.Visible do
			updateLoadingText()
			wait(loadingInterval)
		end
	end)

	coroutine.resume(loadingAnimation)

	-- Simulate loading time (replace with actual loading process)
	wait(4)

	print("Loading complete.")

	-- Fade out loading elements and play loading sound
	fadeOut(LoadingFrame, 0.5)
	LoadingSound:Play()

	-- Delay before showing main interface
	wait(0.5)

	-- Fade in main interface and shadows
	fadeIn(Main, 0.5)

	-- Update visibility states
	LoadingFrame:Destroy()
	Main.Visible = true
	ShadowHolder.Visible = true

	-- Play the loading sound
	LoadingSound:Play()




	-- Added Library:Drag function
	function Library:Drag(obj)
		local UserInputService = game:GetService("UserInputService")

		local gui = obj

		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		gui.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		gui.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end

	Library:Drag(Main, Headerframe)
	--notifcation
	function Library:Newnotify(Text, Description, Length)
		local ScreenGuiM = Instance.new("ScreenGui")
		local Frame = Instance.new("Frame")
		local TextLabel = Instance.new("TextLabel")
		local TextLabel_2 = Instance.new("TextLabel")

		--Properties:

		ScreenGuiM.Parent = game.CoreGui
		ScreenGuiM.Name = "Notify"
		ScreenGuiM.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		ScreenGuiM.ResetOnSpawn = false

		Frame.Parent = ScreenGuiM
		Frame.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
		Frame.BorderColor3 = Color3.fromRGB(255, 255, 255)
		Frame.BorderSizePixel = 4
		Frame.Position = UDim2.new(0.801588178, 0, 0.748129725, 0)
		Frame.Size = UDim2.new(0, 293, 0, 103)

		TextLabel.Parent = Frame
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Position = UDim2.new(0.194539249, 0, 0.411764711, 0)
		TextLabel.Size = UDim2.new(0, 200, 0, 50)
		TextLabel.Font = Enum.Font.SourceSans
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextSize = 24.000
		TextLabel.Text = Description
		TextLabel.TextStrokeColor3 = Color3.fromRGB(129, 129, 129)
		TextLabel.TextStrokeTransparency = 3.000
		TextLabel.TextWrapped = true

		TextLabel_2.Parent = Frame
		TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.BackgroundTransparency = 1.000
		TextLabel_2.BorderSizePixel = 0
		TextLabel_2.Position = UDim2.new(0.194539249, 0, 0, 0)
		TextLabel_2.Size = UDim2.new(0, 200, 0, 50)
		TextLabel_2.Font = Enum.Font.SourceSans
		TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_2.TextSize = 25.000
		TextLabel_2.Text = Text
		TextLabel_2.TextStrokeColor3 = Color3.fromRGB(75, 75, 75)
		TextLabel_2.TextStrokeTransparency = 0.300
		TextLabel_2.TextWrapped = true
		local tween = game:GetService("TweenService")
		tween:Create(Frame, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {Position = UDim2.new(0.802, 0,0.748, 0)}):Play()
		task.wait(Length)
		tween:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(1, 0,0.794, 0)}):Play()
		ScreenGuiM:Destroy()     
	end

	local LibraryTabs = {}

	function Library:CreateTab(tabName)
		-- Create TabButton
		local TabButton = Instance.new("TextButton")
		TabButton.Parent = ActualSide
		TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		TabButton.Size = UDim2.new(0, 200, 0, 30)
		TabButton.Font = Enum.Font.Gotham
		TabButton.Text = tabName
		TabButton.TextColor3 = Color3.fromRGB(193, 193, 193)
		TabButton.TextSize = 14

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = TabButton

		-- Create TabFrame
		local TabFrame = Instance.new("ScrollingFrame")
		TabFrame.Name = tabName .. "_Frame"
		TabFrame.Parent = Tabs
		TabFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		TabFrame.BorderSizePixel = 0
		TabFrame.Size = UDim2.new(1, 0, 1, 0)  -- Full size to fill the parent
		TabFrame.Visible = false  -- Initially hide all tab frames
		TabFrame.ScrollBarThickness = 8
		TabFrame.CanvasSize = UDim2.new(0, 0, 2, 0)  -- Adjust this based on content
		TabFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y  -- Automatically adjust canvas size based on content
		TabFrame.ScrollBarImageColor3 = Color3.fromRGB(193, 193, 193)

		local TabFLayout = Instance.new("UIListLayout")
		TabFLayout.Name = "TabLayout"
		TabFLayout.Parent = TabFrame
		TabFLayout.SortOrder = Enum.SortOrder.LayoutOrder
		TabFLayout.Padding = UDim.new(0, 5)
		
		
		local UIScale3 = Instance.new("UIScale")
		UIScale3.Parent = TabFrame  -- Example of applying UIScale to Main frame
		UIScale3.Scale = 0.9  -- Adjust the scale factor as needed
		
		
		-- Handle tab button click to show corresponding tab frame with animation
		local function activateTab()
			-- Hide all tab frames
			for _, frame in pairs(Tabs:GetChildren()) do
				if frame:IsA("ScrollingFrame") then
					frame.Visible = false
				end
			end
			-- Reset text color for all tab buttons
			for _, button in pairs(ActualSide:GetChildren()) do
				if button:IsA("TextButton") then
					button.TextColor3 = Color3.fromRGB(193, 193, 193)
				end
			end

			-- Show the clicked tab frame and update button text color
			TabFrame.Visible = true
			TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		end

		-- Connect button click to activation function
		TabButton.MouseButton1Click:Connect(activateTab)

		-- Hover effects for TabButton
		TabButton.MouseEnter:Connect(function()
			TabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		end)
		TabButton.MouseLeave:Connect(function()
			TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		end)

		return TabFrame
	end

	function Library:CreateButton(tab, buttonName, callback)
		callback = callback or function() end

		local Button = Instance.new("TextButton")
		Button.Parent = tab
		Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Button.Size = UDim2.new(0, 315, 0, 31)
		Button.AutoButtonColor = false
		Button.Text = ""

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Button

		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = Button
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Size = UDim2.new(0, 194, 0, 31)
		TextLabel.Position = UDim2.new(0, 10, 0, 0)  -- Adjusted position to the left
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = buttonName
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		-- Add icon to the button
		local Icon = Instance.new("ImageLabel")
		Icon.Parent = Button
		Icon.BackgroundTransparency = 1.000
		Icon.Size = UDim2.new(0, 24, 0, 24)
		Icon.Position = UDim2.new(1, -29, 0.5, -12)  -- Adjusted position to the right
		Icon.Image = "rbxassetid://7734010488"  -- Example asset ID for a gear icon

		-- Button animation
		Button.MouseEnter:Connect(function()
			Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		end)
		Button.MouseLeave:Connect(function()
			Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		end)

		-- Click animation and callback
		Button.MouseButton1Click:Connect(function()
			Button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)  -- Change color on click
			wait(0.1)  -- Short delay
			callback()
			Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)  -- Reset color
		end)

		return Button
	end

	function Library:KeySystem(parent, Name, Key, callback)
		-- Define your key-value pairs here (this can be stored in a database or a table)
		local keyTable = {
			["ExampleKey1"] = "ExampleValue1",
			["ExampleKey2"] = "ExampleValue2",
			-- Add more key-value pairs as needed
		}

		-- Create GUI elements
		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0.5, 0, 0.5, 0)
		frame.Position = UDim2.new(0.25, 0, 0.25, 0)
		frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		frame.Parent = parent -- Parenting to the provided parent frame

		local nameLabel = Instance.new("TextLabel")
		nameLabel.Text = Name
		nameLabel.Position = UDim2.new(0.1, 0, 0.1, 0)
		nameLabel.Parent = frame

		local nameTextBox = Instance.new("TextBox")
		nameTextBox.Size = UDim2.new(0.5, 0, 0.1, 0)
		nameTextBox.Position = UDim2.new(0.3, 0, 0.1, 0)
		nameTextBox.Parent = frame

		local keyLabel = Instance.new("TextLabel")
		keyLabel.Text = "Key: "
		keyLabel.Position = UDim2.new(0.1, 0, 0.3, 0)
		keyLabel.Parent = frame

		local keyTextBox = Instance.new("TextBox")
		keyTextBox.Size = UDim2.new(0.5, 0, 0.1, 0)
		keyTextBox.Position = UDim2.new(0.3, 0, 0.3, 0)
		keyTextBox.Parent = frame

		local validateButton = Instance.new("TextButton")
		validateButton.Text = "Submit"
		validateButton.Size = UDim2.new(0.3, 0, 0.1, 0)
		validateButton.Position = UDim2.new(0.35, 0, 0.5, 0)
		validateButton.Parent = frame

		-- Function to handle button click
		validateButton.MouseButton1Click:Connect(function()
			local enteredName = nameTextBox.Text
			local enteredKey = keyTextBox.Text

			-- Validate using Library:KeySystem function
			if keyTable[enteredName] and enteredKey == keyTable[enteredName] then
				callback(true)
			else
				callback(false)
			end

			-- Clean up GUI elements after validation
			frame:Destroy()
		end)
	end

	function Library:CreateToggle(tab, toggleName, callback)
		callback = callback or function() end

		local Toggle = Instance.new("TextButton")
		Toggle.Parent = tab
		Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Toggle.Size = UDim2.new(0, 315, 0, 36)
		Toggle.AutoButtonColor = false
		Toggle.Text = ""

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Toggle

		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = Toggle
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Size = UDim2.new(0, 283, 0, 36)
		TextLabel.Position = UDim2.new(0, 10, 0, 0)
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = toggleName
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		local ToggleBckg = Instance.new("Frame")
		ToggleBckg.Parent = Toggle
		ToggleBckg.BackgroundColor3 = Color3.fromRGB(88, 88, 88)
		ToggleBckg.Position = UDim2.new(0.9, 0, 0.1, 0)
		ToggleBckg.Size = UDim2.new(0, 25, 0, 25)

		local UICorner_2 = Instance.new("UICorner")
		UICorner_2.CornerRadius = UDim.new(0, 5)
		UICorner_2.Parent = ToggleBckg

		local Icon = Instance.new("ImageLabel")
		Icon.Parent = ToggleBckg
		Icon.AnchorPoint = Vector2.new(0.5, 0.5)
		Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Icon.BackgroundTransparency = 1.000
		Icon.Position = UDim2.new(0.5, 0, 0.5, 0)
		Icon.Size = UDim2.new(0, 20, 0, 20)
		Icon.Image = "http://www.roblox.com/asset/?id=13319773302"
		Icon.ImageColor3 = Color3.fromRGB(0, 0, 0)
		Icon.ImageTransparency = 1.000

		-- Toggle state and animation
		local ToggleEnabled = false

		Toggle.MouseButton1Click:Connect(function()
			ToggleEnabled = not ToggleEnabled
			ToggleBckg.BackgroundColor3 = ToggleEnabled and Color3.fromRGB(255, 100, 100) or Color3.fromRGB(88, 88, 88)
			Icon.ImageTransparency = ToggleEnabled and 0 or 1
			callback(ToggleEnabled)
		end)

		return Toggle
	end




	function Library:Label(parent, text)
		text = text or "Label name"

		local Label = Instance.new("TextLabel")
		Label.Name = tostring(text) .. "_Label"
		Label.Parent = parent
		Label.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		Label.BorderSizePixel = 0
		Label.Size = UDim2.new(1, 0, 0, 25)
		Label.Position = UDim2.new(0, 0, 0, 0)
		Label.Font = Enum.Font.GothamMedium
		Label.Text = text
		Label.TextColor3 = Color3.fromRGB(255, 255, 255)
		Label.TextSize = 14
		Label.TextXAlignment = Enum.TextXAlignment.Left
		Label.TextYAlignment = Enum.TextYAlignment.Center
		Label.Padding = UDim.new(0, 10)

		-- Adding rounded corners
		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Label

		-- Adding padding
		local UIPadding = Instance.new("UIPadding")
		UIPadding.PaddingLeft = UDim.new(0, 10)
		UIPadding.Parent = Label

		-- Adding a shadow effect
		local Shadow = Instance.new("ImageLabel")
		Shadow.Name = "Shadow"
		Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
		Shadow.BackgroundTransparency = 1
		Shadow.BorderSizePixel = 0
		Shadow.Position = UDim2.new(0.5, 0, 0.5, 4)
		Shadow.Size = UDim2.new(1, 8, 1, 8)
		Shadow.Image = "rbxassetid://1316045217"
		Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
		Shadow.ImageTransparency = 0.7
		Shadow.Parent = Label

		local function UpdateLabel(newText)
			Label.Text = newText
			Label.Name = tostring(newText) .. "_Label"
		end

		return {
			UpdateLabel = UpdateLabel
		}
	end

	function Library:TextBox(parent, titleText, defaultValue, callback)
		callback = callback or function() end

		local TextBoxFrame = Instance.new("Frame")
		TextBoxFrame.Parent = parent
		TextBoxFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		TextBoxFrame.Size = UDim2.new(0, 300, 0, 50)  -- Adjusted size to be wider
		TextBoxFrame.Position = UDim2.new(0.5, -150, 0.5, -25)  -- Centered in parent
		TextBoxFrame.BorderSizePixel = 0

		-- Adding rounded corners to the frame
		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = TextBoxFrame

		-- Adding a shadow effect to the frame
		local Shadow = Instance.new("ImageLabel")
		Shadow.Name = "Shadow"
		Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
		Shadow.BackgroundTransparency = 1
		Shadow.BorderSizePixel = 0
		Shadow.Position = UDim2.new(0.5, 0, 0.5, 4)
		Shadow.Size = UDim2.new(1, 8, 1, 8)
		Shadow.Image = "rbxassetid://1316045217"
		Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
		Shadow.ImageTransparency = 0.7
		Shadow.Parent = TextBoxFrame

		local TitleLabel = Instance.new("TextLabel")
		TitleLabel.Parent = TextBoxFrame
		TitleLabel.Text = titleText
		TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TitleLabel.TextSize = 14
		TitleLabel.Font = Enum.Font.GothamMedium
		TitleLabel.Size = UDim2.new(1, -20, 0, 20)
		TitleLabel.Position = UDim2.new(0, 10, 0, 5)
		TitleLabel.BackgroundTransparency = 1
		TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

		local TextBox = Instance.new("TextBox")
		TextBox.Parent = TextBoxFrame
		TextBox.Text = defaultValue or ""
		TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextBox.PlaceholderText = "Enter text..."
		TextBox.Size = UDim2.new(1, -20, 0, 20)
		TextBox.Position = UDim2.new(0, 10, 0, 25)
		TextBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		TextBox.BorderSizePixel = 0
		TextBox.ClearTextOnFocus = false
		TextBox.Font = Enum.Font.Gotham
		TextBox.TextSize = 14

		-- Adding rounded corners to the TextBox
		local TextBoxUICorner = Instance.new("UICorner")
		TextBoxUICorner.CornerRadius = UDim.new(0, 5)
		TextBoxUICorner.Parent = TextBox

		-- Adding padding inside the TextBox
		local UIPadding = Instance.new("UIPadding")
		UIPadding.PaddingLeft = UDim.new(0, 10)
		UIPadding.PaddingRight = UDim.new(0, 10)
		UIPadding.Parent = TextBox

		local function UpdateText()
			callback(TextBox.Text)
		end

		TextBox.FocusLost:Connect(UpdateText)

		return TextBox, UpdateText
	end



	local UserInputService = game:GetService("UserInputService")

	function Library:CreateKeybind(tab, keybindName, defaultKey, callback)
		-- Default values if not provided
		keybindName = keybindName or "Keybind"
		defaultKey = defaultKey or Enum.KeyCode.K
		callback = callback or function() end

		-- Create UI elements
		local keybindFrame = Instance.new("Frame")
		keybindFrame.Size = UDim2.new(1, 0, 0, 50)
		keybindFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		keybindFrame.BorderSizePixel = 0
		keybindFrame.Parent = tab

		local uiCorner = Instance.new("UICorner")
		uiCorner.CornerRadius = UDim.new(0, 5)
		uiCorner.Parent = keybindFrame

		local keybindLabel = Instance.new("TextLabel")
		keybindLabel.Text = keybindName
		keybindLabel.Size = UDim2.new(0.7, 0, 1, 0)
		keybindLabel.Position = UDim2.new(0.05, 0, 0, 0)
		keybindLabel.BackgroundTransparency = 1
		keybindLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		keybindLabel.Font = Enum.Font.GothamMedium
		keybindLabel.TextSize = 18
		keybindLabel.TextXAlignment = Enum.TextXAlignment.Left
		keybindLabel.Parent = keybindFrame

		local keybindButton = Instance.new("TextButton")
		keybindButton.Text = tostring(defaultKey):gsub("Enum.KeyCode.", "")
		keybindButton.Size = UDim2.new(0.25, 0, 0.8, 0)
		keybindButton.Position = UDim2.new(0.7, 10, 0.1, 0)
		keybindButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		keybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		keybindButton.Font = Enum.Font.Gotham
		keybindButton.TextSize = 18
		keybindButton.Parent = keybindFrame

		local uiCornerButton = Instance.new("UICorner")
		uiCornerButton.CornerRadius = UDim.new(0, 5)
		uiCornerButton.Parent = keybindButton

		-- Keybind logic
		local currentKey = defaultKey

		local function onKeyPress(input, isProcessed)
			if isProcessed then return end -- Ignore inputs that are already processed
			if input.KeyCode == currentKey then
				callback()
			end
		end

		UserInputService.InputBegan:Connect(onKeyPress)

		keybindButton.MouseButton1Click:Connect(function()
			keybindButton.Text = "..."
			local connection
			connection = UserInputService.InputBegan:Connect(function(input, isProcessed)
				if not isProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
					currentKey = input.KeyCode
					keybindButton.Text = tostring(currentKey):gsub("Enum.KeyCode.", "")
					connection:Disconnect()
				end
			end)
		end)
	end


	function Library:CreateSlider(parent, sliderName, minValue, maxValue, defaultValue, callback)
		callback = callback or function() end
		minValue = minValue or 0
		maxValue = maxValue or 100
		defaultValue = defaultValue or minValue

		local SliderFrame = Instance.new("Frame")
		SliderFrame.Parent = parent
		SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		SliderFrame.Size = UDim2.new(0, 315, 0, 60)

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = SliderFrame

		local TitleLabel = Instance.new("TextLabel")
		TitleLabel.Parent = SliderFrame
		TitleLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		TitleLabel.Size = UDim2.new(1, 0, 0, 20)
		TitleLabel.Font = Enum.Font.GothamMedium
		TitleLabel.Text = sliderName
		TitleLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TitleLabel.TextSize = 12
		TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

		local UIPadding = Instance.new("UIPadding")
		UIPadding.Parent = TitleLabel
		UIPadding.PaddingLeft = UDim.new(0, 10)

		local SliderBar = Instance.new("Frame")
		SliderBar.Parent = SliderFrame
		SliderBar.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
		SliderBar.Size = UDim2.new(1, -20, 0, 10)
		SliderBar.Position = UDim2.new(0, 10, 0, 30)

		local UICornerBar = Instance.new("UICorner")
		UICornerBar.CornerRadius = UDim.new(0, 5)
		UICornerBar.Parent = SliderBar

		local SliderFill = Instance.new("Frame")
		SliderFill.Parent = SliderBar
		SliderFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
		SliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)

		local UICornerFill = Instance.new("UICorner")
		UICornerFill.CornerRadius = UDim.new(0, 5)
		UICornerFill.Parent = SliderFill

		local SliderKnob = Instance.new("ImageButton")
		SliderKnob.Parent = SliderBar
		SliderKnob.BackgroundTransparency = 1
		SliderKnob.Size = UDim2.new(0, 20, 0, 20)
		SliderKnob.Image = "rbxassetid://6035047377"
		SliderKnob.AnchorPoint = Vector2.new(0.5, 0.5)

		local ValueLabel = Instance.new("TextLabel")
		ValueLabel.Parent = SliderFrame
		ValueLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		ValueLabel.Size = UDim2.new(0.2, 0, 0, 20)
		ValueLabel.Position = UDim2.new(0.8, 0, 0, 40)
		ValueLabel.Font = Enum.Font.GothamMedium
		ValueLabel.Text = tostring(defaultValue)
		ValueLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		ValueLabel.TextSize = 12
		ValueLabel.TextXAlignment = Enum.TextXAlignment.Right

		local dragging = false

		local function UpdateSlider(input)
			-- Calculate the relative position of the mouse input within the slider bar
			local relativePos = (input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X
			-- Clamp the percentage within valid range
			relativePos = math.clamp(relativePos, 0, 1)
			-- Calculate the corresponding value based on the percentage
			local value = minValue + relativePos * (maxValue - minValue)

			-- Update the appearance of the slider knob and fill
			SliderFill.Size = UDim2.new(relativePos, 0, 1, 0)
			SliderKnob.Position = UDim2.new(relativePos, 0, 0.5, 0)
			-- Update the displayed value label
			ValueLabel.Text = tostring(math.floor(value))
			-- Call the callback function with the updated value
			callback(value)
		end

		SliderKnob.MouseButton1Down:Connect(function()
			dragging = true
		end)

		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				UpdateSlider(input)
			end
		end)

		game:GetService("UserInputService").InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = false
			end
		end)

		return SliderFrame
	end



	function Library:CreateDropdown(tab, dropdownName, options, callback)
		callback = callback or function() end

		local Dropdown = Instance.new("TextButton")
		Dropdown.Parent = tab
		Dropdown.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Dropdown.Position = UDim2.new(0, 0, 0, 0)
		Dropdown.Selectable = false
		Dropdown.Size = UDim2.new(0, 380, 0, 31)
		Dropdown.AutoButtonColor = false
		Dropdown.Text = dropdownName or "Dropdown"
		Dropdown.TextColor3 = Color3.fromRGB(193, 193, 193)
		Dropdown.TextSize = 14
		Dropdown.Font = Enum.Font.Gotham
		Dropdown.TextXAlignment = Enum.TextXAlignment.Left

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Dropdown

		local Icon = Instance.new("ImageLabel")
		Icon.Parent = Dropdown
		Icon.Size = UDim2.new(0, 24, 0, 24)
		Icon.Position = UDim2.new(1, -30, 0.5, -12)
		Icon.BackgroundTransparency = 1
		Icon.Image = "rbxassetid://6031091000" -- Closed state icon
		Icon.ScaleType = Enum.ScaleType.Fit

		local DropdownList = Instance.new("Frame")
		DropdownList.Name = "DropdownList"
		DropdownList.Parent = tab
		DropdownList.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		DropdownList.Position = UDim2.new(0, 0, 0, Dropdown.AbsolutePosition.Y + Dropdown.AbsoluteSize.Y)
		DropdownList.Size = UDim2.new(0, 380, 0, 0)
		DropdownList.Visible = false
		DropdownList.ZIndex = 10

		local UICornerList = Instance.new("UICorner")
		UICornerList.CornerRadius = UDim.new(0, 5)
		UICornerList.Parent = DropdownList

		local ListLayout = Instance.new("UIListLayout")
		ListLayout.Parent = DropdownList
		ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		ListLayout.Padding = UDim.new(0, 5)

		for _, optionText in ipairs(options) do
			local OptionButton = Instance.new("TextButton")
			OptionButton.Parent = DropdownList
			OptionButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			OptionButton.Size = UDim2.new(1, 0, 0, 30)
			OptionButton.Font = Enum.Font.Gotham
			OptionButton.Text = optionText
			OptionButton.TextColor3 = Color3.fromRGB(193, 193, 193)
			OptionButton.TextWrapped = true

			OptionButton.MouseButton1Click:Connect(function()
				callback(optionText)
				Dropdown.Text = optionText
				DropdownList.Visible = false
				Icon.Image = "rbxassetid://6031091000" -- Closed state icon

				for _, child in ipairs(tab:GetChildren()) do
					if child:IsA("GuiObject") and child ~= Dropdown and child.Name ~= "DropdownList" then
						child.Visible = true
					end
				end
			end)
		end

		Dropdown.MouseButton1Click:Connect(function()
			DropdownList.Visible = not DropdownList.Visible
			Icon.Image = DropdownList.Visible and "rbxassetid://6031090999" or "rbxassetid://6031091000"

			if DropdownList.Visible then
				for _, child in ipairs(tab:GetChildren()) do
					if child:IsA("GuiObject") and child ~= Dropdown and child.Name ~= "DropdownList" then
						child.Visible = false
					end
				end

				DropdownList.Position = UDim2.new(0, 0, 0, Dropdown.AbsolutePosition.Y + Dropdown.AbsoluteSize.Y)
				DropdownList.Size = UDim2.new(0, 380, 0, (#options * 30) + ((#options - 1) * 5)) -- Adjust height based on options count and padding
			else
				for _, child in ipairs(tab:GetChildren()) do
					if child:IsA("GuiObject") and child ~= Dropdown and child.Name ~= "DropdownList" then
						child.Visible = true
					end
				end
			end
		end)

		return Dropdown
	end




	return Library
end

return Library
