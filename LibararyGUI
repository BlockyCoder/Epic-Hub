-- Gui to Lua
-- Version: 3.2

local Library = {}
-- Random UI Name
local LibraryName = tostring(math.random(100000,200000))..tostring(math.random(100000,200000))..tostring(math.random(100000,200000))

local TweenService = game:GetService("TweenService")

function Library:Drag(obj)
	local UserInputService = game:GetService("UserInputService")

	local gui = obj

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

local function addDropShadow(guiElement)
	local shadow = Instance.new("ImageLabel")
	shadow.Image = "http://www.roblox.com/asset/?id=7239839701" -- Shadow image ID
	shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	shadow.BackgroundTransparency = 1
	shadow.Position = UDim2.new(0.5, 0, 0.5, 6) -- Adjust Y position for desired shadow offset
	shadow.Size = UDim2.new(1, 16, 1, 16) -- Adjust size for desired shadow size
	shadow.ZIndex = guiElement.ZIndex - 1
	shadow.Parent = guiElement
end

-- Function to animate GUI elements
local function animateGui(guiElement, properties, duration, easingStyle, easingDirection)
	local tweenInfo = TweenInfo.new(duration, easingStyle, easingDirection)
	local tween = TweenService:Create(guiElement, tweenInfo, properties)
	tween:Play()
end



function Library:Create(XNmae)
	local XNmae = XNmae or "ERROR!"

local ScreenScript = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local Headerframe = Instance.new("Frame")
local Close = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local ImageLabel = Instance.new("ImageLabel")
local UIScale = Instance.new("UIScale")
local Title = Instance.new("TextButton")
local UIPadding = Instance.new("UIPadding")
local FirstSeperator = Instance.new("Frame")
local Siderframe = Instance.new("Frame")
local ActualSide = Instance.new("ScrollingFrame")
local ActualSideListLayout = Instance.new("UIListLayout")
local TextButton = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local Tabholder = Instance.new("ScrollingFrame")
local Tabs = Instance.new("Folder")
local UICorner_3 = Instance.new("UICorner")
local TabLayout = Instance.new("UIListLayout")
local ImageButtonK = Instance.new("ImageButton")
local ImageButtonKCorner = Instance.new("UICorner")

--Properties:

ScreenScript.Name = "ScreenScript"
ScreenScript.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenScript.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = ScreenScript
Main.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Main.BorderColor3 = Color3.fromRGB(27, 42, 53)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.272804052, 0, 0.243107766, 0)
Main.Size = UDim2.new(0, 525, 0, 318)

Headerframe.Name = "Headerframe"
Headerframe.Parent = Main
Headerframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Headerframe.BackgroundTransparency = 1.000
Headerframe.BorderColor3 = Color3.fromRGB(0, 0, 0)
Headerframe.BorderSizePixel = 0
Headerframe.Size = UDim2.new(0, 525, 0, 37)

Close.Name = "Close"
Close.Parent = Headerframe
Close.Active = false
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1.000
Close.Position = UDim2.new(0.917412579, 0, 0.167417377, 0)
Close.Selectable = false
Close.Size = UDim2.new(0, 33, 0, 22)
	Close.MouseButton1Click:Connect(function()
		-- Animate closing
		animateGui(Main, {Position = UDim2.new(0.5, 0, 2, 0)}, 0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		wait(0.5) -- Wait for the animation to complete before destroying
		ScreenScript:Destroy()
	end)
	
	
	
	
UICorner.CornerRadius = UDim.new(0, 4)
UICorner.Parent = Close

ImageLabel.Parent = Close
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.Position = UDim2.new(0.500000775, 1, 0.545454264, 0)
ImageLabel.Size = UDim2.new(0, 21, 0, 21)
ImageLabel.Image = "rbxassetid://7743878857"

UIScale.Parent = ImageLabel
UIScale.Scale = 0.700

Title.Name = "Title"
Title.Parent = Headerframe
Title.Active = false
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Position = UDim2.new(0.00192685076, 0, 0, 0)
Title.Selectable = false
Title.Size = UDim2.new(0, 323, 0, 36)
Title.Font = Enum.Font.GothamMedium
Title.Text = XNmae
Title.TextColor3 = Color3.fromRGB(161, 161, 161)
Title.TextScaled = true
Title.TextSize = 13.000
Title.TextWrapped = true
Title.TextXAlignment = Enum.TextXAlignment.Left

UIPadding.Parent = Title
UIPadding.PaddingLeft = UDim.new(0, 10)

FirstSeperator.Name = "FirstSeperator"
FirstSeperator.Parent = Main
FirstSeperator.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
FirstSeperator.BorderSizePixel = 0
FirstSeperator.Position = UDim2.new(-2.58091513e-05, 0, 0.116352201, 0)
FirstSeperator.Size = UDim2.new(0, 525, 0, 1)
FirstSeperator.ZIndex = 5

Siderframe.Name = "Siderframe"
Siderframe.Parent = Main
Siderframe.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Siderframe.BorderColor3 = Color3.fromRGB(0, 0, 0)
Siderframe.BorderSizePixel = 0
Siderframe.Position = UDim2.new(-0.00190476188, 0, 0.119496852, 0)
Siderframe.Size = UDim2.new(0, 199, 0, 280)

ActualSide.Name = "ActualSide"
ActualSide.Parent = Siderframe
ActualSide.Active = true
ActualSide.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ActualSide.BackgroundTransparency = 1.000
ActualSide.BorderColor3 = Color3.fromRGB(0, 0, 0)
ActualSide.BorderSizePixel = 0
ActualSide.Size = UDim2.new(0, 198, 0, 239)
ActualSide.ScrollBarThickness = 2

ActualSideListLayout.Name = "ActualSideListLayout"
ActualSideListLayout.Parent = ActualSide
ActualSideListLayout.SortOrder = Enum.SortOrder.LayoutOrder

TextButton.Parent = Siderframe
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(-0.00502512557, 0, 0.853571415, 0)
TextButton.Size = UDim2.new(0, 200, 0, 41)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Place ID"
TextButton.TextColor3 = Color3.fromRGB(0, 255, 157)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

UICorner_2.CornerRadius = UDim.new(0, 5)
UICorner_2.Parent = Main

Tabholder.Name = "Tabholder"
Tabholder.Parent = Main
Tabholder.Active = true
Tabholder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tabholder.BackgroundTransparency = 1.000
Tabholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tabholder.BorderSizePixel = 0
Tabholder.Position = UDim2.new(0.375238091, 0, 0.119496852, 0)
Tabholder.Size = UDim2.new(0, 327, 0, 280)
Tabholder.ScrollBarThickness = 5

Tabs.Name = "Tabs"
Tabs.Parent = Tabholder

UICorner_3.CornerRadius = UDim.new(0, 12)
UICorner_3.Parent = Tabholder

TabLayout.Name = "TabLayout"
TabLayout.Parent = Tabholder
TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
	
	local function toggleMainFrame()
		local mainVisible = Main.Visible
		animateGui(Main, {Position = mainVisible and UDim2.new(0.5, 0, 2, 0) or UDim2.new(0.272804052, 0, 0.243107766, 0)}, 0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		wait(0.5) -- Wait for the animation to complete before toggling visibility
		Main.Visible = not mainVisible
	end
	
	
	
ImageButtonK.Name = "ImageButtonK"
ImageButtonK.Parent = ScreenScript
ImageButtonK.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButtonK.BackgroundTransparency = 1.000
ImageButtonK.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageButtonK.BorderSizePixel = 0
ImageButtonK.Position = UDim2.new(0.219957083, 0, 0.0619834736, 0)
ImageButtonK.Size = UDim2.new(0, 73, 0, 52)
ImageButtonK.Image = "rbxassetid://15771991482"
	ImageButtonK.MouseButton1Click:Connect(function()
		toggleMainFrame()
	end)
	
	
	
	
ImageButtonKCorner.CornerRadius = UDim.new(0, 12)
ImageButtonKCorner.Name = "ImageButtonKCorner"
ImageButtonKCorner.Parent = ImageButtonK


	Library:Drag(Main, Headerframe)
	addDropShadow(Main)

-- Functions:
	local xTabs = {}

	function xTabs:Tab(Name, xVisible)
		local Name = Name or "Tab"
		xVisible = xVisible == nil and true or xVisible

		-- Create GUI elements
		local TabDisplay = Instance.new("ImageButton")
		local Seperator = Instance.new("Frame")
		local Title = Instance.new("TextLabel")
		local UIPadding = Instance.new("UIPadding")
		local UICorner = Instance.new("UICorner")

		-- Properties:
		TabDisplay.Name = "TabDisplay"
		TabDisplay.Parent = Tabholder
		TabDisplay.Active = false
		TabDisplay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabDisplay.Position = UDim2.new(0.0286853034, 0, 0.204402521, 0)
		TabDisplay.Selectable = false
		TabDisplay.Size = UDim2.new(0, 0, 0, 36)
		TabDisplay.Visible = xVisible

		Seperator.Name = "Seperator"
		Seperator.Parent = TabDisplay
		Seperator.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
		Seperator.BorderSizePixel = 0
		Seperator.Position = UDim2.new(0.989860594, 0, 0, 0)
		Seperator.Size = UDim2.new(0, 1, 0, 36)

		Title.Name = "Title"
		Title.Parent = TabDisplay
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.Position = UDim2.new(6.63723185e-05, 0, 0, 0)
		Title.Size = UDim2.new(0, 6, 0, 36)
		Title.Font = Enum.Font.GothamMedium
		Title.Text = Name -- Set the tab title here
		Title.TextColor3 = xVisible and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(190, 190, 190)
		Title.TextScaled = true
		Title.TextSize = 12.000
		Title.TextWrapped = true

		UIPadding.Parent = Title
		UIPadding.PaddingLeft = UDim.new(0, 10)
		UIPadding.PaddingRight = UDim.new(0, 10)

		UICorner.Parent = TabDisplay

		return TabDisplay -- Return the created tab for further manipulation if needed
	end

	-- Example usage:
--	local myTab = xTabs:Tab("My Tab", true) -- Creates a tab with the title "My Tab" and makes it visible

	

local Elements = {}

function Elements:Button(Name, Callback)
	local Button = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local TextLabel = Instance.new("TextLabel")
	local UIPadding = Instance.new("UIPadding")
	local Status = Instance.new("Frame")
	local ActualThing = Instance.new("Frame")
	local ImageLabel = Instance.new("ImageLabel")
	local UIScale = Instance.new("UIScale")

	Name = Name or "Button"
	Callback = Callback or function() end

	-- Properties:
	Button.Name = "Button"
	Button.Parent = Tabholder -- Change this to the appropriate parent
	Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Button.Selectable = false
	Button.Size = UDim2.new(0, 319, 0, 31)
	Button.AutoButtonColor = false
	Button.Text = ""

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = Button

	TextLabel.Parent = Button
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Size = UDim2.new(0, 260, 0, 31)
	TextLabel.Font = Enum.Font.GothamMedium
	TextLabel.Text = Name
	TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
	TextLabel.TextSize = 12.000
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left

	UIPadding.Parent = TextLabel
	UIPadding.PaddingLeft = UDim.new(0, 10)

	Status.Name = "Status"
	Status.Parent = Button
	Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Status.BackgroundTransparency = 1.000
	Status.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Status.Position = UDim2.new(0.88371408, 0, 0, 0)
	Status.Size = UDim2.new(0, 37, 0, 31)

	ActualThing.Name = "ActualThing"
	ActualThing.Parent = Status
	ActualThing.AnchorPoint = Vector2.new(0.5, 0.5)
	ActualThing.BackgroundColor3 = Color3.fromRGB(106, 0, 255)
	ActualThing.BackgroundTransparency = 1.000
	ActualThing.Position = UDim2.new(0.5, 0, 0.5, 0)
	ActualThing.Size = UDim2.new(0, 20, 0, 20)

	ImageLabel.Parent = ActualThing
	ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
	ImageLabel.Size = UDim2.new(0, 20, 0, 20)
	ImageLabel.Image = "rbxassetid://7734010488"
	ImageLabel.ImageColor3 = Color3.fromRGB(104, 104, 104)

	UIScale.Parent = ImageLabel
	UIScale.Scale = 0.800

	Button.MouseButton1Click:Connect(function()
		Callback()
	end)

	return Button
end

-- Example usage:
--Elements:Button("Infinite Money", function()
	--print("Button clicked: Infinite Money")
--end)


-- Functions:

function Elements:Toggle(Name, Callback)
	local Toggle = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local TextLabel = Instance.new("TextLabel")
	local UIPadding = Instance.new("UIPadding")
	local Status = Instance.new("Frame")
	local ToggleBckg = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Icon = Instance.new("ImageLabel")
	local UIScale = Instance.new("UIScale")

	Name = Name or "Toggle"
	Callback = Callback or function() end
	local ToggleEnabled = false

	-- Properties:
	Toggle.Name = "Toggle"
	Toggle.Parent =Tabholder
	Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Toggle.Selectable = false
	Toggle.Size = UDim2.new(0, 302, 0, 31)
	Toggle.AutoButtonColor = false
	Toggle.Text = ""

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = Toggle

	TextLabel.Parent = Toggle
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Size = UDim2.new(0, 194, 0, 31)
	TextLabel.Font = Enum.Font.GothamMedium
	TextLabel.Text = Name
	TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
	TextLabel.TextSize = 12.000
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left

	UIPadding.Parent = TextLabel
	UIPadding.PaddingLeft = UDim.new(0, 10)

	Status.Name = "Status"
	Status.Parent = Toggle
	Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Status.BackgroundTransparency = 1.000
	Status.Position = UDim2.new(0.839826822, 0, 0, 0)
	Status.Size = UDim2.new(0, 37, 0, 31)

	ToggleBckg.Name = "ToggleBckg"
	ToggleBckg.Parent = Status
	ToggleBckg.AnchorPoint = Vector2.new(0.5, 0.5)
	ToggleBckg.Position = UDim2.new(0.5, 0, 0.5, 0)
	ToggleBckg.Size = UDim2.new(0, 20, 0, 20)

	UICorner_2.CornerRadius = UDim.new(0, 5)
	UICorner_2.Parent = ToggleBckg

	Icon.Name = "Icon"
	Icon.Parent = ToggleBckg
	Icon.AnchorPoint = Vector2.new(0.5, 0.5)
	Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Icon.BackgroundTransparency = 1.000
	Icon.Position = UDim2.new(0.5, 0, 0.5, 0)
	Icon.Size = UDim2.new(0, 20, 0, 20)
	Icon.Image = "http://www.roblox.com/asset/?id=13319773302"
	Icon.ImageColor3 = Color3.fromRGB(0, 0, 0)

	UIScale.Parent = Icon
	UIScale.Scale = 0.800

	local function UpdateIcon()
		if ToggleEnabled then
			Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			ToggleBckg.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
			Icon.ImageColor3 = Color3.fromRGB(255, 255, 255)
		else
			Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			ToggleBckg.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
			Icon.ImageColor3 = Color3.fromRGB(0, 0, 0)
		end
	end

	Toggle.MouseButton1Click:Connect(function()
		ToggleEnabled = not ToggleEnabled
		UpdateIcon()
		Callback(ToggleEnabled)
	end)

	return Toggle
end

-- Example usage:
--Elements:Toggle("ESP", function(enabled)
	--print("ESP toggled:", enabled)
--end)



function Elements:Textbox(Name, Default, Callback)
	local Textbox = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local TextLabel = Instance.new("TextLabel")
	local UIPadding = Instance.new("UIPadding")
	local Status = Instance.new("Frame")
	local TextBox = Instance.new("TextBox")
	local UICorner_2 = Instance.new("UICorner")
	local UIPadding_2 = Instance.new("UIPadding")

	Name = Name or "Textbox"
	Default = Default or ""
	Callback = Callback or function() end

	-- Properties:
	Textbox.Name = "Textbox"
	Textbox.Parent = Tabholder
	Textbox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Textbox.Selectable = false
	Textbox.Size = UDim2.new(0, 327, 0, 51)
	Textbox.AutoButtonColor = false
	Textbox.Text = ""

	UICorner.CornerRadius = UDim.new(0, 2)
	UICorner.Parent = Textbox

	TextLabel.Parent = Textbox
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.Size = UDim2.new(0, 294, 0, 31)
	TextLabel.Font = Enum.Font.GothamMedium
	TextLabel.Text = Name
	TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 12.000
	TextLabel.TextWrapped = true
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left

	UIPadding.Parent = TextLabel
	UIPadding.PaddingLeft = UDim.new(0, 10)

	Status.Name = "Status"
	Status.Parent = Textbox
	Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Status.BackgroundTransparency = 1.000
	Status.Position = UDim2.new(0.0412193388, 0, 0.450980395, 0)
	Status.Size = UDim2.new(0, 212, 0, 28)

	TextBox.Parent = Status
	TextBox.Active = false
	TextBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	TextBox.ClipsDescendants = true
	TextBox.Position = UDim2.new(0, 0, 0.225806102, 0)
	TextBox.Size = UDim2.new(0, 313, 0, 21)
	TextBox.ClearTextOnFocus = false
	TextBox.Font = Enum.Font.Gotham
	TextBox.PlaceholderColor3 = Color3.fromRGB(104, 104, 104)
	TextBox.PlaceholderText = Default
	TextBox.Text = ""
	TextBox.TextColor3 = Color3.fromRGB(177, 177, 177)
	TextBox.TextScaled = true
	TextBox.TextSize = 12.000
	TextBox.TextWrapped = true

	UICorner_2.CornerRadius = UDim.new(0, 2)
	UICorner_2.Parent = TextBox

	UIPadding_2.Parent = TextBox
	UIPadding_2.PaddingLeft = UDim.new(0, -5)
	UIPadding_2.PaddingRight = UDim.new(0, -5)

	TextBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			Callback(TextBox.Text)
		end
	end)

	return TextBox
end

-- Example usage:
--Elements:Textbox("Player name", "enter name", function(text)
	--print("Entered name:", text)
--end)

-- Functions:

function Elements:Slider(Name, Min, Max, Callback)
	local Slider = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Title = Instance.new("TextLabel")
	local UIPadding = Instance.new("UIPadding")
	local Bar = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Progress = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local Circle = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Value = Instance.new("TextLabel")
	local UIPadding_2 = Instance.new("UIPadding")
	local UIPadding_3 = Instance.new("UIPadding")

	Name = Name or "Slider"
	Min = Min or 16
	Max = Max or 500
	Callback = Callback or function() end

	-- Properties:
	Slider.Name = "Slider"
	Slider.Parent = Tabholder
	Slider.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Slider.Size = UDim2.new(0, 321, 0, 35)

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = Slider

	Title.Name = "Title"
	Title.Parent = Slider
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(-0.0452489331, 0, 0, 0)
	Title.Size = UDim2.new(0, 238, 0, 23)
	Title.Font = Enum.Font.GothamMedium
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(193, 193, 193)
	Title.TextSize = 12.000
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left

	UIPadding.Parent = Title
	UIPadding.PaddingLeft = UDim.new(0, 10)

	Bar.Name = "Bar"
	Bar.Parent = Slider
	Bar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	Bar.Position = UDim2.new(-0.00216429494, 0, 0.658536196, 0)
	Bar.Size = UDim2.new(0, 311, 0, 4)

	UICorner_2.CornerRadius = UDim.new(0, 5)
	UICorner_2.Parent = Bar

	Progress.Name = "Progress"
	Progress.Parent = Bar
	Progress.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
	Progress.Position = UDim2.new(-0.00200000009, 0, 0.658999979, 0)
	Progress.Size = UDim2.new(0, 311, 0, 4)

	UICorner_3.CornerRadius = UDim.new(0, 5)
	UICorner_3.Parent = Progress

	Circle.Name = "Circle"
	Circle.Parent = Progress
	Circle.AnchorPoint = Vector2.new(0.5, 0.5)
	Circle.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
	Circle.Position = UDim2.new(1, 0, 0.5, 0)
	Circle.Size = UDim2.new(0, 10, 0, 10)

	UICorner_4.CornerRadius = UDim.new(1, 0)
	UICorner_4.Parent = Circle

	Value.Name = "Value"
	Value.Parent = Slider
	Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Value.BackgroundTransparency = 1.000
	Value.Position = UDim2.new(0.720605195, 0, 0, 0)
	Value.Size = UDim2.new(0, 72, 0, 22)
	Value.Font = Enum.Font.GothamMedium
	Value.Text = "0%"
	Value.TextColor3 = Color3.fromRGB(124, 124, 124)
	Value.TextSize = 12.000
	Value.TextXAlignment = Enum.TextXAlignment.Right

	UIPadding_2.Parent = Value
	UIPadding_2.PaddingRight = UDim.new(0, 10)

	UIPadding_3.Parent = Slider
	UIPadding_3.PaddingLeft = UDim.new(0, 10)

	local mouse = game.Players.LocalPlayer:GetMouse()
	local uis =     game:GetService("UserInputService")

	local function updateValue()
		local relativeX = math.clamp((Circle.Position.X.Offset + 5) / 311, 0, 1)
		local value = math.floor(Min + (Max - Min) * relativeX)
		Value.Text = tostring(value) .. "%"
		Callback(value)
	end

	Circle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			local barPos = Bar.AbsolutePosition
			local barSize = Bar.AbsoluteSize
			local relativeX = math.clamp((mouse.X - barPos.X) / barSize.X, 0, 1)
			Circle.Position = UDim2.new(relativeX, 0, 0.5, 0)
			updateValue()
		end
	end)

	Circle.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			local barPos = Bar.AbsolutePosition
			local barSize = Bar.AbsoluteSize
			local relativeX = math.clamp((mouse.X - barPos.X) / barSize.X, 0, 1)
			Circle.Position = UDim2.new(relativeX, 0, 0.5, 0)
			updateValue()
		end
	end)

	return Slider
end


function Elements:ColorPicker(colText, defcolor, callback)
	colText = colText or "ColorPicker"
	callback = callback or function() end

	local ColorPicker = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Title = Instance.new("TextLabel")
	local ColorFrame = Instance.new("Frame")
	local ColorPreview = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local ColorValue = Instance.new("TextLabel")
	local UIPadding = Instance.new("UIPadding")
	local UICorner_3 = Instance.new("UICorner")
	local RedSlider = Elements:Slider("Red", 0, 255)
	local GreenSlider = Elements:Slider("Green", 0, 255)
	local BlueSlider = Elements:Slider("Blue", 0, 255)
	local ConfirmButton = Elements:Button("Confirm")

	-- Properties:
	ColorPicker.Name = "ColorPicker"
	ColorPicker.Parent = Tabholder
	ColorPicker.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	ColorPicker.Size = UDim2.new(0, 327, 0, 200)

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = ColorPicker

	Title.Name = "Title"
	Title.Parent = ColorPicker
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Size = UDim2.new(0, 294, 0, 31)
	Title.Font = Enum.Font.GothamMedium
	Title.Text = colText
	Title.TextColor3 = Color3.fromRGB(193, 193, 193)
	Title.TextSize = 12.000
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left

	ColorFrame.Name = "ColorFrame"
	ColorFrame.Parent = ColorPicker
	ColorFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	ColorFrame.Position = UDim2.new(0.0145772592, 0, 0.180000007, 0)
	ColorFrame.Size = UDim2.new(0, 311, 0, 48)

	ColorPreview.Name = "ColorPreview"
	ColorPreview.Parent = ColorFrame
	ColorPreview.BackgroundColor3 = defcolor or Color3.fromRGB(255, 255, 255)
	ColorPreview.Position = UDim2.new(0.779033303, 0, 0, 0)
	ColorPreview.Size = UDim2.new(0, 66, 0, 48)

	UICorner_2.CornerRadius = UDim.new(0, 5)
	UICorner_2.Parent = ColorPreview

	ColorValue.Name = "ColorValue"
	ColorValue.Parent = ColorFrame
	ColorValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ColorValue.BackgroundTransparency = 1.000
	ColorValue.Position = UDim2.new(0.0546748016, 0, 0, 0)
	ColorValue.Size = UDim2.new(0, 215, 0, 48)
	ColorValue.Font = Enum.Font.GothamMedium
	ColorValue.Text = tostring(defcolor and math.floor(defcolor.R * 255) or 255) .. ", " .. tostring(defcolor and math.floor(defcolor.G * 255) or 255) .. ", " .. tostring(defcolor and math.floor(defcolor.B * 255) or 255)
	ColorValue.TextColor3 = Color3.fromRGB(193, 193, 193)
	ColorValue.TextSize = 12.000
	ColorValue.TextXAlignment = Enum.TextXAlignment.Left

	UIPadding.Parent = ColorValue
	UIPadding.PaddingLeft = UDim.new(0, 10)

	UICorner_3.CornerRadius = UDim.new(0, 5)
	UICorner_3.Parent = ColorValue

	RedSlider.Parent = ColorPicker
	GreenSlider.Parent = ColorPicker
	BlueSlider.Parent = ColorPicker

	ConfirmButton.Parent = ColorPicker

	RedSlider.Value = defcolor and math.floor(defcolor.R * 255) or 255
	GreenSlider.Value = defcolor and math.floor(defcolor.G * 255) or 255
	BlueSlider.Value = defcolor and math.floor(defcolor.B * 255) or 255

	RedSlider.Position = UDim2.new(0.0546748, 0, 0.393846035, 0)
	GreenSlider.Position = UDim2.new(0.0546748, 0, 0.528460562, 0)
	BlueSlider.Position = UDim2.new(0.0546748, 0, 0.661168635, 0)

		ConfirmButton.Position = UDim2.new(0.0546748, 0, 0.794315696, 0)

		RedSlider.OnValueChanged:Connect(function(value)
			ColorPreview.BackgroundColor3 = Color3.fromRGB(value, GreenSlider.Value, BlueSlider.Value)
			ColorValue.Text = tostring(math.floor(value)) .. ", " .. tostring(math.floor(GreenSlider.Value)) .. ", " .. tostring(math.floor(BlueSlider.Value))
		end)

		GreenSlider.OnValueChanged:Connect(function(value)
			ColorPreview.BackgroundColor3 = Color3.fromRGB(RedSlider.Value, value, BlueSlider.Value)
			ColorValue.Text = tostring(math.floor(RedSlider.Value)) .. ", " .. tostring(math.floor(value)) .. ", " .. tostring(math.floor(BlueSlider.Value))
		end)

		BlueSlider.OnValueChanged:Connect(function(value)
			ColorPreview.BackgroundColor3 = Color3.fromRGB(RedSlider.Value, GreenSlider.Value, value)
			ColorValue.Text = tostring(math.floor(RedSlider.Value)) .. ", " .. tostring(math.floor(GreenSlider.Value)) .. ", " .. tostring(math.floor(value))
		end)

		ConfirmButton.MouseButton1Click:Connect(function()
			callback(ColorPreview.BackgroundColor3)
			ColorPicker:Destroy()
		end)

		return ColorPicker
	end


-- Assume TweenService is defined elsewhere in your code
local TweenService = game:GetService("TweenService")

-- Define the Dropdown function in the Elements table
function Elements:Dropdown(Name, Listx, Callback)
	local Name = Name or "Dropdown"
	local DropdownFunction = {}
	local Callback = Callback or function() end
	local DropSize = 35
	local opened = false

	-- Create GUI elements for the dropdown
	local Dropdown = Instance.new("TextButton")
	local Main = Instance.new("Frame")
	local Title = Instance.new("TextLabel")
	local List = Instance.new("Frame")
	local Holder = Instance.new("Frame")
	local Option = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local UIPadding = Instance.new("UIPadding")
	local UIListLayout = Instance.new("UIListLayout")

	-- Set up properties for the dropdown and its elements
	Dropdown.Name = Name
	Dropdown.Parent = Tabholder
	Dropdown.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Dropdown.Selectable = false
	Dropdown.Size = UDim2.new(0, 232, 0, 60)
	Dropdown.AutoButtonColor = false
	Dropdown.Text = ""

	Main.Name = "Main"
	Main.Parent = Dropdown
	Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Main.BackgroundTransparency = 1.000
	Main.Size = UDim2.new(0, 232, 0, 31)

	Title.Name = "Title"
	Title.Parent = Main
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Size = UDim2.new(0, 232, 0, 31)
	Title.Font = Enum.Font.GothamMedium
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(193, 193, 193)
	Title.TextSize = 12.000
	Title.TextXAlignment = Enum.TextXAlignment.Left

	List.Name = "List"
	List.Parent = Dropdown
	List.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	List.BackgroundTransparency = 1.000
	List.Position = UDim2.new(0, 0, 1, 0)
	List.Size = UDim2.new(0, 232, 0, 1)

	UIListLayout.Parent = List
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	Holder.Name = "Holder"
	Holder.Parent = List
	Holder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Holder.BackgroundTransparency = 1.000
	Holder.BorderSizePixel = 0
	Holder.Size = UDim2.new(0, 232, 0, 0)
	Holder.Position = UDim2.new(0, 0, 0.0454545468, 0)

	UIPadding.Parent = Holder
	UIPadding.PaddingLeft = UDim.new(0, 5)

	Option.Name = "Option"
	Option.Parent = Holder
	Option.Active = false
	Option.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Option.BorderSizePixel = 0
	Option.Selectable = false
	Option.Size = UDim2.new(0, 231, 0, 23)
	Option.AutoButtonColor = false
	Option.Text = ""

	local Title_2 = Title:Clone()
	Title_2.Parent = Option
	Title_2.Name = "Title_2"
	Title_2.Text = ""

	UICorner.CornerRadius = UDim.new(0, 2)
	UICorner.Parent = Dropdown

	-- Additional setup omitted for brevity

	DropdownFunction.OpenDropdown = function()
		opened = not opened
		List.Size = UDim2.new(0, 232, 0, opened and #Listx * DropSize or 1)
		Dropdown.Position = UDim2.new(Dropdown.Position.X.Scale, Dropdown.Position.X.Offset, Dropdown.Position.Y.Scale, opened and Dropdown.Position.Y.Offset or Dropdown.Position.Y.Offset - (#Listx * DropSize))
		TweenService:Create(Dropdown, TweenInfo.new(0.3), {Size = UDim2.new(0, 232, 0, opened and #Listx * DropSize or 60)}):Play()
	end

	DropdownFunction.UpdateSelection = function(option)
		Title.Text = Name .. " - " .. option
		DropdownFunction.OpenDropdown()
		Callback(option)
	end

	for i, v in ipairs(Listx) do
		local NewOption = Option:Clone()
		NewOption.Parent = Holder
		NewOption.Title.Text = v
		NewOption.Size = UDim2.new(0, 231, 0, 23)
		NewOption.Position = UDim2.new(0, 0, 0, (i - 1) * DropSize)
		NewOption.MouseButton1Click:Connect(function()
			DropdownFunction.UpdateSelection(v)
		end)
	end

	Dropdown.MouseButton1Click:Connect(DropdownFunction.OpenDropdown)
	Dropdown.Parent = Main

	return DropdownFunction
end
	return {
		xTabs = xTabs,
		Elements = Elements
	}
end
return Library
