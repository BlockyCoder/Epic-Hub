-- Gui to Lua
-- Version: 3.2

-- Instances:
local Library = {}
-- Random UI Name
local LibraryName = tostring(math.random(100000,200000))..tostring(math.random(100000,200000))..tostring(math.random(100000,200000))

if game.CoreGui:FindFirstChild("EpicHub") then
	game.CoreGui.EpicHub:Destroy()
end


function Library:Toggle()
	if game.CoreGui:FindFirstChild(LibraryName).Enabled then 
		game.CoreGui:FindFirstChild(LibraryName).Enabled = false
	else 
		game.CoreGui:FindFirstChild(LibraryName).Enabled = true
	end
end

function Library:Drag(obj)
	local UserInputService = game:GetService("UserInputService")

	local gui = obj

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

function Library:Create(xHubName)
	local xHubName = xHubName or "UI Library"
local ScreenGui = Instance.new("ScreenGui")
local Menu = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Topbar = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Title = Instance.new("TextLabel")
local UIPadding = Instance.new("UIPadding")
local Minimize = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local ImageLabel = Instance.new("ImageLabel")
local UIScale = Instance.new("UIScale")
local Close = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local ImageLabel_2 = Instance.new("ImageLabel")
local UIScale_2 = Instance.new("UIScale")
local TabHold = Instance.new("Frame")
local Holder2 = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local UIPadding_2 = Instance.new("UIPadding")
local ExampleContainer = Instance.new("Frame")
local PageHold = Instance.new("Folder")

--Properties:
ScreenGui.Name = "EpicHub"
ScreenGui.Parent =  game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Menu.Name = "Menu"
Menu.Parent = ScreenGui
Menu.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Menu.BorderColor3 = Color3.fromRGB(27, 42, 53)
Menu.Position = UDim2.new(0.336060435, 0, 0.211180121, 0)
Menu.Size = UDim2.new(0, 525, 0, 318)

UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = Menu

Topbar.Name = "Topbar"
Topbar.Parent = Menu
Topbar.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
Topbar.BorderColor3 = Color3.fromRGB(27, 42, 53)
Topbar.Size = UDim2.new(0, 519, 0, 36)

UICorner_2.CornerRadius = UDim.new(0, 5)
UICorner_2.Parent = Topbar

Title.Name = "Title"
Title.Parent = Topbar
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
Title.Position = UDim2.new(0.00192678231, 0, 0, 0)
Title.Size = UDim2.new(0, 200, 0, 36)
Title.Font = Enum.Font.GothamMedium
Title.Text = xHubName
Title.TextColor3 = Color3.fromRGB(161, 161, 161)
Title.TextSize = 13.000
Title.TextXAlignment = Enum.TextXAlignment.Left

UIPadding.Parent = Title
UIPadding.PaddingLeft = UDim.new(0, 10)

Minimize.Name = "Minimize"
Minimize.Parent = Topbar
Minimize.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
Minimize.BackgroundTransparency = 1.000
Minimize.BorderColor3 = Color3.fromRGB(27, 42, 53)
Minimize.Position = UDim2.new(0.892100215, 0, 0.194444448, 0)
Minimize.Selectable = false
Minimize.Size = UDim2.new(0, 21, 0, 21)
Minimize.Text = ""
Minimize.TextTransparency = 1.000

UICorner_3.CornerRadius = UDim.new(0, 4)
UICorner_3.Parent = Minimize

ImageLabel.Parent = Minimize
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel.Size = UDim2.new(0, 21, 0, 21)
ImageLabel.Image = "rbxassetid://7733997870"
ImageLabel.ImageColor3 = Color3.fromRGB(134, 134, 134)

UIScale.Parent = ImageLabel
UIScale.Scale = 0.600

Close.Name = "Close"
Close.Parent = Topbar
Close.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
Close.BackgroundTransparency = 1.000
Close.BorderColor3 = Color3.fromRGB(27, 42, 53)
Close.Position = UDim2.new(0.940269768, 0, 0.194444448, 0)
Close.Selectable = false
Close.Size = UDim2.new(0, 21, 0, 21)
Close.Text = ""
Close.TextTransparency = 1.000


UICorner_4.CornerRadius = UDim.new(0, 4)
UICorner_4.Parent = Close

ImageLabel_2.Parent = Close
ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
ImageLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel_2.Size = UDim2.new(0, 21, 0, 21)
ImageLabel_2.Image = "rbxassetid://7743878857"
ImageLabel_2.ImageColor3 = Color3.fromRGB(134, 134, 134)

UIScale_2.Parent = ImageLabel_2
UIScale_2.Scale = 0.700

TabHold.Name = "TabHold"
TabHold.Parent = Menu
TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabHold.BackgroundTransparency = 1.000
TabHold.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabHold.BorderSizePixel = 0
TabHold.Position = UDim2.new(0.00190476188, 0, 0.113207549, 0)
TabHold.Size = UDim2.new(0, 218, 0, 282)

Holder2.Name = "Holder"
Holder2.Parent = TabHold
Holder2.Active = true
Holder2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Holder2.BackgroundTransparency = 1.000
	Holder2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Holder2.Size = UDim2.new(1, 0, 0.996453881, 1)
	Holder2.ZIndex = 3
	Holder2.ScrollBarThickness = 0

	UIListLayout.Parent = Holder2
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 6)

	UIPadding_2.Parent = Holder2
UIPadding_2.PaddingTop = UDim.new(0, 10)

ExampleContainer.Name = "ExampleContainer"
ExampleContainer.Parent = Menu
ExampleContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ExampleContainer.BackgroundTransparency = 1.000
ExampleContainer.BorderColor3 = Color3.fromRGB(27, 42, 53)
ExampleContainer.Position = UDim2.new(0.425714284, 0, 0.113207549, 0)
ExampleContainer.Size = UDim2.new(0, 300, 0, 280)

PageHold.Name = "PageHold"
PageHold.Parent = ExampleContainer


	Close.MouseButton1Click:Connect(function()
		
		wait(0.3)  -- Delay to ensure fade out completes
		ScreenGui:Destroy()  -- Destroy the ScreenScript
	end)
	
	
	Library:Drag(Menu, Topbar)
	
	
	
	local xTabs = {}


	function xTabs:Tab(TabNam)
		local TabNam = TabNam or "Tab"

--Tab button

		local Example = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		local TextLabel = Instance.new("TextLabel")

		--Properties:

		Example.Name = TabNam
		Example.Parent = Holder2
		Example.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Example.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Example.Position = UDim2.new(0.105504587, 0, 0, 0)
		Example.Selectable = false
		Example.Size = UDim2.new(0, 201, 0, 31)
		Example.ZIndex = 6
		Example.AutoButtonColor = false
		Example.Text = ""

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Example

		TextLabel.Parent = Example
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Position = UDim2.new(0.0945273638, 0, 0, 0)
		TextLabel.Size = UDim2.new(0, 172, 0, 31)
		TextLabel.ZIndex = 7
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = TabNam
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000


---Tab frame

		-- Gui to Lua
		-- Version: 3.2

		-- Instances:

		local Left = Instance.new("ScrollingFrame")
		local UIListLayout = Instance.new("UIListLayout")
		local ExampleSection = Instance.new("Frame")
		local Title = Instance.new("Frame")
		local TextLabel = Instance.new("TextLabel")
		local UIListLayout_2 = Instance.new("UIListLayout")
		local UIPadding = Instance.new("UIPadding")
		local Holder = Instance.new("Frame")
		local UIListLayout_3 = Instance.new("UIListLayout")
		local UIPadding_2 = Instance.new("UIPadding")

		--Properties:

		Left.Name = "Left"
		Left.Parent = PageHold
		Left.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Left.BackgroundTransparency = 1.000
		Left.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Left.Size = UDim2.new(0, 301, 0, 282)
		Left.ScrollBarThickness = 0

		UIListLayout.Parent = Left
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

		ExampleSection.Name = "Section"
		ExampleSection.Parent = Left
		ExampleSection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ExampleSection.BackgroundTransparency = 1.000
		ExampleSection.BorderColor3 = Color3.fromRGB(27, 42, 53)
		ExampleSection.Size = UDim2.new(0, 301, 0, 277)

		Title.Name = "Title"
		Title.Parent = ExampleSection
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Title.LayoutOrder = -1
		Title.Size = UDim2.new(0, 255, 0, 29)

		TextLabel.Parent = Title
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Size = UDim2.new(0, 255, 0, 34)
		TextLabel.Font = Enum.Font.Gotham
		TextLabel.Text = TabNam
		TextLabel.TextColor3 = Color3.fromRGB(130, 130, 130)
		TextLabel.TextSize = 12.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		UIListLayout_2.Parent = ExampleSection
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder

		UIPadding.Parent = ExampleSection
		UIPadding.PaddingLeft = UDim.new(0, 20)

		Holder.Name = "Holder"
		Holder.Parent = ExampleSection
		Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Holder.BackgroundTransparency = 1.000
		Holder.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Holder.Position = UDim2.new(-0.00355871883, 0, 0.104693137, 0)
		Holder.Size = UDim2.new(1.01067615, 0, 0.870036125, 0)

		UIListLayout_3.Parent = Holder
		UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_3.Padding = UDim.new(0, 5)

		UIPadding_2.Parent = Left
		UIPadding_2.PaddingTop = UDim.new(0, 5)


		-- Connect button click to activation function
		Example.MouseButton1Click:Connect(function()
			-- Hide all other tab frames
			for _, frame in pairs(PageHold:GetChildren()) do
				if frame:IsA("ScrollingFrame") then
					frame.Visible = false
				end
			end
			-- Show the selected tab frame
			Left.Visible = true
		end)
	
	
	local Elements = {}
	
	function Elements:Button(ButName,Callback)
		local ButName = ButName or "Button"
		local ButtonFunction = {}
		local Callback = Callback or function () end
		
		-- Gui to Lua
		-- Version: 3.2

		-- Instances:

		local Button = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		local TextLabel = Instance.new("TextLabel")
		local UIPadding = Instance.new("UIPadding")
		local Status = Instance.new("Frame")
		local ActualThing = Instance.new("Frame")
		local ImageLabel = Instance.new("ImageLabel")
		local UIScale = Instance.new("UIScale")

		--Properties:

		Button.Name = "Button"
		Button.Parent = Holder
		Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Button.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Button.Position = UDim2.new(0, 0, 0.439393938, 0)
		Button.Selectable = false
		Button.Size = UDim2.new(0, 231, 0, 31)
		Button.AutoButtonColor = false
		Button.Text = ""

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Button

		TextLabel.Parent = Button
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Size = UDim2.new(0, 194, 0, 31)
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = ButName
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		UIPadding.Parent = TextLabel
		UIPadding.PaddingLeft = UDim.new(0, 10)

		Status.Name = "Status"
		Status.Parent = Button
		Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Status.BackgroundTransparency = 1.000
		Status.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Status.Position = UDim2.new(0.839826822, 0, 0, 0)
		Status.Size = UDim2.new(0, 37, 0, 31)

		ActualThing.Name = "ActualThing"
		ActualThing.Parent = Status
		ActualThing.AnchorPoint = Vector2.new(0.5, 0.5)
		ActualThing.BackgroundColor3 = Color3.fromRGB(106, 0, 255)
		ActualThing.BackgroundTransparency = 1.000
		ActualThing.BorderColor3 = Color3.fromRGB(27, 42, 53)
		ActualThing.Position = UDim2.new(0.5, 0, 0.5, 0)
		ActualThing.Size = UDim2.new(0, 20, 0, 20)

		ImageLabel.Parent = ActualThing
		ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.BackgroundTransparency = 1.000
		ImageLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
		ImageLabel.Size = UDim2.new(0, 20, 0, 20)
		ImageLabel.Image = "rbxassetid://7734010488"
		ImageLabel.ImageColor3 = Color3.fromRGB(104, 104, 104)

		UIScale.Parent = ImageLabel
		UIScale.Scale = 0.800
		
		Button.MouseButton1Click:Connect(function()
			--animateButton(Color3.fromRGB(70, 70, 70))
			pcall(Callback())
		end)
		
	end
	
	function Elements:Label(LabelText)
		local LabelText = LabelText or "Label"

		local Label = Instance.new("TextLabel")
		Label.Name = "Label"
		Label.Parent = Holder
		Label.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Label.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Label.Size = UDim2.new(0, 231, 0, 21)
		Label.AutoButtonColor = false
		Label.Text = LabelText
		Label.TextColor3 = Color3.fromRGB(193, 193, 193)
		Label.TextSize = 12
		Label.Font = Enum.Font.GothamMedium

		return Label
	end



	function Elements:Slider(Name, Min, Max, Callback)
		local Name = Name or "Slider"
		local Callback = Callback or function() end
		local Max = Max or 500
		local Min = Min or 16

		-- Gui to Lua
		-- Version: 3.2

		-- Instances:

		local Slider = Instance.new("Frame")
		local UICorner = Instance.new("UICorner")
		local Title = Instance.new("TextLabel")
		local UIPadding = Instance.new("UIPadding")
		local Bar = Instance.new("Frame")
		local UICorner_2 = Instance.new("UICorner")
		local Progress = Instance.new("Frame")
		local UICorner_3 = Instance.new("UICorner")
		local Circle = Instance.new("Frame")
		local UICorner_4 = Instance.new("UICorner")
		local Value = Instance.new("TextLabel")
		local UIPadding_2 = Instance.new("UIPadding")
		local UIPadding_3 = Instance.new("UIPadding")

		-- Properties:

		Slider.Name = "Slider"
		Slider.Parent = Holder
		Slider.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Slider.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Slider.Position = UDim2.new(0, 0, 0.241610736, 0)
		Slider.Size = UDim2.new(0, 231, 0, 41)

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Slider

		Title.Name = "Title"
		Title.Parent = Slider
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Title.Position = UDim2.new(0.0389610386, 0, 0, 0)
		Title.Size = UDim2.new(0, 200, 0, 21)
		Title.Font = Enum.Font.GothamMedium
		Title.Text = Name
		Title.TextColor3 = Color3.fromRGB(193, 193, 193)
		Title.TextSize = 12.000
		Title.TextXAlignment = Enum.TextXAlignment.Left

		UIPadding.Parent = Title
		UIPadding.PaddingLeft = UDim.new(0, 10)

		Bar.Name = "Bar"
		Bar.Parent = Slider
		Bar.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
		Bar.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Bar.Position = UDim2.new(0.0432900455, 0, 0.561983466, 0)
		Bar.Size = UDim2.new(0, 200, 0, 4)

		UICorner_2.CornerRadius = UDim.new(0, 5)
		UICorner_2.Parent = Bar

		Progress.Name = "Progress"
		Progress.Parent = Bar
		Progress.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Progress.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Progress.Size = UDim2.new(0, 0, 0, 4)

		UICorner_3.CornerRadius = UDim.new(0, 5)
		UICorner_3.Parent = Progress

		Circle.Name = "Circle"
		Circle.Parent = Slider
		Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Circle.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Circle.Position = UDim2.new(0, 0, 0.122132942, 0)
		Circle.Size = UDim2.new(0, 15, 0, 15)

		UICorner_4.CornerRadius = UDim.new(1, 0)
		UICorner_4.Parent = Circle

		Value.Name = "Value"
		Value.Parent = Slider
		Value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Value.BackgroundTransparency = 1.000
		Value.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Value.Position = UDim2.new(0.324675322, 0, 0, 0)
		Value.Size = UDim2.new(0, 33, 0, 21)
		Value.Font = Enum.Font.Gotham
		Value.Text = tostring(Min)
		Value.TextColor3 = Color3.fromRGB(130, 130, 130)
		Value.TextSize = 12.000
		Value.TextXAlignment = Enum.TextXAlignment.Left

		UIPadding_2.Parent = Value
		UIPadding_2.PaddingLeft = UDim.new(0, 10)

		UIPadding_3.Parent = Slider
		UIPadding_3.PaddingTop = UDim.new(0, 23)

		-- Slider logic

		local function updateValue(mouseX)
			local percent = math.clamp((mouseX - Bar.AbsolutePosition.X) / Bar.AbsoluteSize.X, 0, 1)
			local newValue = math.floor(percent * (Max - Min) + Min)
			Progress.Size = UDim2.new(percent, 0, 1, 0)
			Circle.Position = UDim2.new(percent, 0, 0.122132942, 0)
			Value.Text = tostring(newValue)
			Callback(newValue)
		end

		local function setProgress(value)
			local percent = math.clamp((value - Min) / (Max - Min), 0, 1)
			Progress.Size = UDim2.new(percent, 0, 1, 0)
			Circle.Position = UDim2.new(percent, 0, 0.122132942, 0)
			Value.Text = tostring(value)
		end

		local moveConn
		local releaseConn

		Slider.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				updateValue(input.Position.X)
				moveConn = Slider.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						updateValue(input.Position.X)
					end
				end)
				releaseConn = game:GetService("UserInputService").InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						moveConn:Disconnect()
						releaseConn:Disconnect()
					end
				end)
			end
		end)

		return Slider
	end

return {
	xTabs = xTabs,
	Elements  = Elements
}
end
	return Library
end

return Library
