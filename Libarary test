
-- Gui to Lua
-- Version: 3.2

-- Instances:
local Library = {}
-- Random UI Name
local LibraryName = tostring(math.random(100000,200000))..tostring(math.random(100000,200000))..tostring(math.random(100000,200000))



function Library:Toggle()
	if game.CoreGui:FindFirstChild(LibraryName).Enabled then 
		game.CoreGui:FindFirstChild(LibraryName).Enabled = false
	else 
		game.CoreGui:FindFirstChild(LibraryName).Enabled = true
	end
end

function Library:Drag(obj)
	local UserInputService = game:GetService("UserInputService")

	local gui = obj

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

function Library:Create(xHubName)

if game.CoreGui:FindFirstChild(xHubName) then
	game.CoreGui[xHubName]:Destroy()
end

	local xHubName = xHubName or "UI Library"

	local ScreenGui = Instance.new("ScreenGui")
	local Menu = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Topbar = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Title = Instance.new("TextLabel")
	local UIPadding = Instance.new("UIPadding")
	local Minimize = Instance.new("TextButton")
	local UICorner_3 = Instance.new("UICorner")
	local ImageLabel = Instance.new("ImageLabel")
	local UIScale = Instance.new("UIScale")
	local Close = Instance.new("TextButton")
	local UICorner_4 = Instance.new("UICorner")
	local ImageLabel_2 = Instance.new("ImageLabel")
	local UIScale_2 = Instance.new("UIScale")
	local TabHold = Instance.new("Frame")
	local Holder2 = Instance.new("ScrollingFrame")
	local UIListLayout = Instance.new("UIListLayout")
	local UIPadding_2 = Instance.new("UIPadding")
	local ExampleContainer = Instance.new("Frame")
	local PageHold = Instance.new("Folder")

	--Properties:
	ScreenGui.Name = xHubName
	ScreenGui.Parent =  game.CoreGui
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Menu.Name = "Menu"
	Menu.Parent = ScreenGui
	Menu.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	Menu.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Menu.Position = UDim2.new(0.336060435, 0, 0.211180121, 0)
	Menu.Size = UDim2.new(0, 525, 0, 318)

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = Menu

	Topbar.Name = "Topbar"
	Topbar.Parent = Menu
	Topbar.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
	Topbar.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Topbar.Size = UDim2.new(0, 519, 0, 36)

	UICorner_2.CornerRadius = UDim.new(0, 5)
	UICorner_2.Parent = Topbar

	Title.Name = "Title"
	Title.Parent = Topbar
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Title.Position = UDim2.new(0.00192678231, 0, 0, 0)
	Title.Size = UDim2.new(0, 200, 0, 36)
	Title.Font = Enum.Font.GothamMedium
	Title.Text = xHubName
	Title.TextColor3 = Color3.fromRGB(161, 161, 161)
	Title.TextSize = 13.000
	Title.TextXAlignment = Enum.TextXAlignment.Left

	UIPadding.Parent = Title
	UIPadding.PaddingLeft = UDim.new(0, 10)

	Minimize.Name = "Minimize"
	Minimize.Parent = Topbar
	Minimize.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
	Minimize.BackgroundTransparency = 1.000
	Minimize.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Minimize.Position = UDim2.new(0.892100215, 0, 0.194444448, 0)
	Minimize.Selectable = false
	Minimize.Size = UDim2.new(0, 21, 0, 21)
	Minimize.Text = ""
	Minimize.TextTransparency = 1.000

	UICorner_3.CornerRadius = UDim.new(0, 4)
	UICorner_3.Parent = Minimize

	ImageLabel.Parent = Minimize
	ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
	ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
	ImageLabel.Size = UDim2.new(0, 21, 0, 21)
	ImageLabel.Image = "rbxassetid://7733997870"
	ImageLabel.ImageColor3 = Color3.fromRGB(134, 134, 134)

	UIScale.Parent = ImageLabel
	UIScale.Scale = 0.600

	Close.Name = "Close"
	Close.Parent = Topbar
	Close.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
	Close.BackgroundTransparency = 1.000
	Close.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Close.Position = UDim2.new(0.940269768, 0, 0.194444448, 0)
	Close.Selectable = false
	Close.Size = UDim2.new(0, 21, 0, 21)
	Close.Text = ""
	Close.TextTransparency = 1.000


	UICorner_4.CornerRadius = UDim.new(0, 4)
	UICorner_4.Parent = Close

	ImageLabel_2.Parent = Close
	ImageLabel_2.AnchorPoint = Vector2.new(0.5, 0.5)
	ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel_2.BackgroundTransparency = 1.000
	ImageLabel_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	ImageLabel_2.Position = UDim2.new(0.5, 0, 0.5, 0)
	ImageLabel_2.Size = UDim2.new(0, 21, 0, 21)
	ImageLabel_2.Image = "rbxassetid://7743878857"
	ImageLabel_2.ImageColor3 = Color3.fromRGB(134, 134, 134)

	UIScale_2.Parent = ImageLabel_2
	UIScale_2.Scale = 0.700

	TabHold.Name = "TabHold"
	TabHold.Parent = Menu
	TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHold.BackgroundTransparency = 1.000
	TabHold.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TabHold.BorderSizePixel = 0
	TabHold.Position = UDim2.new(0.00190476188, 0, 0.113207549, 0)
	TabHold.Size = UDim2.new(0, 218, 0, 282)

	Holder2.Name = "Holder"
	Holder2.Parent = TabHold
	Holder2.Active = true
	Holder2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Holder2.BackgroundTransparency = 1.000
	Holder2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Holder2.Size = UDim2.new(1, 0, 0.996453881, 1)
	Holder2.ZIndex = 3
	Holder2.ScrollBarThickness = 0

	UIListLayout.Parent = Holder2
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 6)

	UIPadding_2.Parent = Holder2
	UIPadding_2.PaddingTop = UDim.new(0, 10)

	ExampleContainer.Name = "ExampleContainer"
	ExampleContainer.Parent = Menu
	ExampleContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ExampleContainer.BackgroundTransparency = 1.000
	ExampleContainer.BorderColor3 = Color3.fromRGB(27, 42, 53)
	ExampleContainer.Position = UDim2.new(0.425714284, 0, 0.113207549, 0)
	ExampleContainer.Size = UDim2.new(0, 300, 0, 280)

	PageHold.Name = "PageHold"
	PageHold.Parent = ExampleContainer


	Close.MouseButton1Click:Connect(function()

		wait(0.3)  -- Delay to ensure fade out completes
		ScreenGui:Destroy()  -- Destroy the ScreenScript
	end)


	Library:Drag(Menu, Topbar)




	function Library:Tab(TabNam)
		local TabNam = TabNam or "Tab"

		--Tab button

		local Example = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		local TextLabel = Instance.new("TextLabel")

		--Properties:

		Example.Name = TabNam
		Example.Parent = Holder2
		Example.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Example.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Example.Position = UDim2.new(0.105504587, 0, 0, 0)
		Example.Selectable = false
		Example.Size = UDim2.new(0, 201, 0, 31)
		Example.ZIndex = 6
		Example.AutoButtonColor = false
		Example.Text = ""

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Example

		TextLabel.Parent = Example
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Position = UDim2.new(0.0945273638, 0, 0, 0)
		TextLabel.Size = UDim2.new(0, 172, 0, 31)
		TextLabel.ZIndex = 7
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = TabNam
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000


		---Tab frame

		-- Gui to Lua
		-- Version: 3.2

		-- Instances:

		local Left = Instance.new("ScrollingFrame")
		local UIListLayout = Instance.new("UIListLayout")
		local ExampleSection = Instance.new("Frame")
		local Title = Instance.new("Frame")
		local TextLabel = Instance.new("TextLabel")
		local UIListLayout_2 = Instance.new("UIListLayout")
		local UIPadding = Instance.new("UIPadding")
		local Holder = Instance.new("Frame")
		local UIListLayout_3 = Instance.new("UIListLayout")
		local UIPadding_2 = Instance.new("UIPadding")

		--Properties:

		Left.Name = "Left"
		Left.Parent = PageHold
		Left.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Left.BackgroundTransparency = 1.000
		Left.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Left.Size = UDim2.new(0, 301, 0, 282)
		Left.Visible = false
		Left.ScrollBarThickness = 0

		UIListLayout.Parent = Left
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

		ExampleSection.Name = "Section"
		ExampleSection.Parent = Left
		ExampleSection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ExampleSection.BackgroundTransparency = 1.000
		ExampleSection.BorderColor3 = Color3.fromRGB(27, 42, 53)
		ExampleSection.Size = UDim2.new(0, 301, 0, 277)

		Title.Name = "Title"
		Title.Parent = ExampleSection
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Title.LayoutOrder = -1
		Title.Size = UDim2.new(0, 255, 0, 29)

		TextLabel.Parent = Title
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Size = UDim2.new(0, 255, 0, 34)
		TextLabel.Font = Enum.Font.Gotham
		TextLabel.Text = TabNam
		TextLabel.TextColor3 = Color3.fromRGB(130, 130, 130)
		TextLabel.TextSize = 12.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		UIListLayout_2.Parent = ExampleSection
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder

		UIPadding.Parent = ExampleSection
		UIPadding.PaddingLeft = UDim.new(0, 20)

		Holder.Name = "Holder"
		Holder.Parent = ExampleSection
		Holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Holder.BackgroundTransparency = 1.000
		Holder.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Holder.Position = UDim2.new(-0.00355871883, 0, 0.104693137, 0)
		Holder.Size = UDim2.new(1.01067615, 0, 0.870036125, 0)

		UIListLayout_3.Parent = Holder
		UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_3.Padding = UDim.new(0, 5)

		UIPadding_2.Parent = Left
		UIPadding_2.PaddingTop = UDim.new(0, 5)


		-- Connect button click to activation function
		Example.MouseButton1Click:Connect(function()
			-- Hide all other tab frames
			for _, frame in pairs(PageHold:GetChildren()) do
				if frame:IsA("ScrollingFrame") then
					frame.Visible = false
				end
			end
			-- Show the selected tab frame
			Left.Visible = true
			Example.TextColor3 = Color3.fromRGB(255, 255, 255)
			Example.BackgroundColor = Color3.fromRGB(0, 0, 0)
		end)
		return Holder
	end


	function Library:Button(Parent, ButName, Callback)
		local ButName = ButName or "Button"
		local Callback = Callback or function() end

		local Button = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner")
		local TextLabel = Instance.new("TextLabel")
		local UIPadding = Instance.new("UIPadding")
		local Status = Instance.new("Frame")
		local ActualThing = Instance.new("Frame")
		local ImageLabel = Instance.new("ImageLabel")
		local UIScale = Instance.new("UIScale")

		--Properties:

		Button.Name = "Button"
		Button.Parent = Parent
		Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Button.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Button.Position = UDim2.new(0, 0, 0.439393938, 0)
		Button.Selectable = false
		Button.Size = UDim2.new(1, -20, 0, 31)
		Button.AutoButtonColor = true
		Button.Text = ""

		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Button

		TextLabel.Parent = Button
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Size = UDim2.new(0, 194, 0, 31)
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = ButName
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		UIPadding.Parent = TextLabel
		UIPadding.PaddingLeft = UDim.new(0, 10)

		Status.Name = "Status"
		Status.Parent = Button
		Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Status.BackgroundTransparency = 1.000
		Status.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Status.Position = UDim2.new(0.839826822, 0, 0, 0)
		Status.Size = UDim2.new(0, 37, 0, 31)

		ActualThing.Name = "ActualThing"
		ActualThing.Parent = Status
		ActualThing.AnchorPoint = Vector2.new(0.5, 0.5)
		ActualThing.BackgroundColor3 = Color3.fromRGB(106, 0, 255)
		ActualThing.BackgroundTransparency = 1.000
		ActualThing.BorderColor3 = Color3.fromRGB(27, 42, 53)
		ActualThing.Position = UDim2.new(0.5, 0, 0.5, 0)
		ActualThing.Size = UDim2.new(0, 20, 0, 20)

		ImageLabel.Parent = ActualThing
		ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
		ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.BackgroundTransparency = 1.000
		ImageLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
		ImageLabel.Size = UDim2.new(0, 20, 0, 20)
		ImageLabel.Image = "rbxassetid://7734010488"
		ImageLabel.ImageColor3 = Color3.fromRGB(104, 104, 104)

		UIScale.Parent = ImageLabel
		UIScale.Scale = 0.800
		
		
		-- Button click event
		Button.MouseButton1Click:Connect(function()
			print("Button clicked: " .. ButName)
			Callback()
		end)

		print("Button created: " .. ButName .. " in " .. Parent.Name)
	end



	function Library:Label(parent, LabelText)
		local LabelText = LabelText or "Label"

		local Label = Instance.new("TextLabel")
		Label.Name = "Label"
		Label.Parent = parent
		Label.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Label.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Label.Size = UDim2.new(1, 0, 0, 31)
		Label.Text = LabelText
		Label.TextColor3 = Color3.fromRGB(193, 193, 193)
		Label.TextSize = 12
		Label.Font = Enum.Font.GothamMedium

		return Label
	end

	function Library:TextBox(parent, titleText, defaultValue, callback)
		-- Create main Textbox container
		local Textbox = Instance.new("TextButton")
		Textbox.Name = "Textbox"
		Textbox.Parent = parent
		Textbox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Textbox.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Textbox.Position = UDim2.new(0, 0, 0.706586838, 0)
		Textbox.Selectable = false
		Textbox.Size = UDim2.new(1, 0, 0, 51)  -- Adjusted width to fit parent dynamically
		Textbox.AutoButtonColor = false
		Textbox.Text = ""

		-- Apply corner radius to Textbox
		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 2)
		UICorner.Parent = Textbox

		-- Create and configure TextLabel
		local TextLabel = Instance.new("TextLabel")
		TextLabel.Parent = Textbox
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextLabel.Size = UDim2.new(1, 0, 0, 31)  -- Adjusted width to fit parent dynamically
		TextLabel.Font = Enum.Font.GothamMedium
		TextLabel.Text = titleText
		TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
		TextLabel.TextSize = 12.000
		TextLabel.TextXAlignment = Enum.TextXAlignment.Left

		-- Apply padding to TextLabel
		local UIPadding = Instance.new("UIPadding")
		UIPadding.Parent = TextLabel
		UIPadding.PaddingLeft = UDim.new(0, 10)

		-- Create and configure Status frame
		local Status = Instance.new("Frame")
		Status.Name = "Status"
		Status.Parent = Textbox
		Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Status.BackgroundTransparency = 1.000
		Status.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Status.Position = UDim2.new(0, 0, 0.5, 0)  -- Adjusted position to center vertically
		Status.Size = UDim2.new(1, 0, 0, 28)

		-- Create and configure TextBox
		local TextBox = Instance.new("TextBox")
		TextBox.Parent = Status
		TextBox.Active = false
		TextBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		TextBox.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TextBox.ClipsDescendants = true
		TextBox.Position = UDim2.new(0, 10, 0.5, -8)  -- Adjusted position to center vertically
		TextBox.Size = UDim2.new(1, -20, 0, 17)  -- Adjusted width to fit parent dynamically
		TextBox.ClearTextOnFocus = false
		TextBox.Font = Enum.Font.Gotham
		TextBox.PlaceholderColor3 = Color3.fromRGB(104, 104, 104)
		TextBox.PlaceholderText = defaultValue
		TextBox.Text = ""
		TextBox.TextColor3 = Color3.fromRGB(177, 177, 177)
		TextBox.TextSize = 12.000

		-- Apply corner radius to TextBox
		local UICorner_2 = Instance.new("UICorner")
		UICorner_2.CornerRadius = UDim.new(0, 2)
		UICorner_2.Parent = TextBox

		-- Event handling for TextBox text changed
		TextBox:GetPropertyChangedSignal("Text"):Connect(function()
			callback(TextBox.Text)
		end)

		local function UpdateText()
			callback(TextBox.Text)
		end

		TextBox.FocusLost:Connect(UpdateText)



		return TextBox, UpdateText  -- Return TextBox in case further manipulation is needed
	end


	function Library:Toggle(tab, toggleName, callback)
    -- Create the toggle structure
    local Toggle = Instance.new("TextButton")
    Toggle.Name = "Toggle"
    Toggle.Parent = tab
    Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Toggle.BorderColor3 = Color3.fromRGB(27, 42, 53)
    Toggle.Size = UDim2.new(1, -20, 0, 31)  -- Adjusted size
    Toggle.Position = UDim2.new(0, 10, 0, 10)  -- Adjusted position
    Toggle.AutoButtonColor = false
    Toggle.Text = ""

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = Toggle

    local TextLabel = Instance.new("TextLabel")
    TextLabel.Parent = Toggle
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
    TextLabel.Size = UDim2.new(0, 194, 0, 31)
    TextLabel.Font = Enum.Font.GothamMedium
    TextLabel.Text = toggleName
    TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
    TextLabel.TextSize = 12.000
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left

    local UIPadding = Instance.new("UIPadding")
    UIPadding.Parent = TextLabel
    UIPadding.PaddingLeft = UDim.new(0, 10)

    local Status = Instance.new("Frame")
    Status.Name = "Status"
    Status.Parent = Toggle
    Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Status.BackgroundTransparency = 1.000
    Status.BorderColor3 = Color3.fromRGB(27, 42, 53)
    Status.Position = UDim2.new(0.839826822, 0, 0, 0)
    Status.Size = UDim2.new(0, 37, 0, 31)

    local ToggleBckg = Instance.new("Frame")
    ToggleBckg.Name = "ToggleBckg"
    ToggleBckg.Parent = Status
    ToggleBckg.AnchorPoint = Vector2.new(0.5, 0.5)
    ToggleBckg.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
    ToggleBckg.BorderColor3 = Color3.fromRGB(27, 42, 53)
    ToggleBckg.Position = UDim2.new(0.5, 0, 0.5, 0)
    ToggleBckg.Size = UDim2.new(0, 20, 0, 20)

    local UICorner_2 = Instance.new("UICorner")
    UICorner_2.CornerRadius = UDim.new(0, 5)
    UICorner_2.Parent = ToggleBckg

    local Icon = Instance.new("ImageLabel")
    Icon.Name = "Icon"
    Icon.Parent = ToggleBckg
    Icon.AnchorPoint = Vector2.new(0.5, 0.5)
    Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Icon.BackgroundTransparency = 1.000
    Icon.BorderColor3 = Color3.fromRGB(27, 42, 53)
    Icon.Position = UDim2.new(0.5, 0, 0.5, 0)
    Icon.Size = UDim2.new(0, 20, 0, 20)
    Icon.Image = "http://www.roblox.com/asset/?id=13319773302"
    Icon.ImageColor3 = Color3.fromRGB(0, 0, 0)
    Icon.ImageTransparency = 1.000

    local UIScale = Instance.new("UIScale")
    UIScale.Parent = Icon
    UIScale.Scale = 0.800

    -- Function to toggle the icon visibility
    local isToggled = false
    local function updateToggleState()
        isToggled = not isToggled
        Icon.ImageTransparency = isToggled and 0 or 1
        ToggleBckg.BackgroundColor3 = isToggled and Color3.fromRGB(255, 100, 100) or Color3.fromRGB(29, 29, 29)

        callback(isToggled)
    end

    Toggle.MouseButton1Click:Connect(updateToggleState)

    return Toggle
end




	
function Library:Slider(parent, sliderName, minValue, maxValue, defaultValue, callback)
	sliderName = sliderName or "Slider"
	callback = callback or function() end
	maxValue = maxValue or 500
	minValue = minValue or 16

	-- Create instances
	local Template = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Progress = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Information = Instance.new("TextLabel")
	local Shadow = Instance.new("ImageLabel")
	local UICorner_3 = Instance.new("UICorner")
	local Interact = Instance.new("TextButton")

	-- Set properties
	Template.Name = sliderName
	Template.Parent = parent
	Template.BackgroundColor3 = Color3.fromRGB(44, 153, 93)
	Template.BackgroundTransparency = 0.800
	Template.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Template.BorderSizePixel = 0
	Template.Position = UDim2.new(0, 0, 0.439393938, 0) -- Match Button position
	Template.Size = UDim2.new(1, -20, 0, 31) -- Match Button size
	Template.ZIndex = 150

	UICorner.Parent = Template

	Progress.Name = "Progress"
	Progress.Parent = Template
	Progress.BackgroundColor3 = Color3.fromRGB(44, 153, 93)
	Progress.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Progress.BorderSizePixel = 0
	Progress.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
	Progress.ZIndex = 150

	UICorner_2.Parent = Progress

	Information.Name = "Information"
	Information.Parent = Template
	Information.AnchorPoint = Vector2.new(0.5, 0.5)
	Information.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Information.BackgroundTransparency = 1.000
	Information.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Information.BorderSizePixel = 0
	Information.Position = UDim2.new(0.5, 0, 0.5, 0)
	Information.Size = UDim2.new(0, 169, 0, 15)
	Information.ZIndex = 150
	Information.Font = Enum.Font.SourceSans
	Information.Text = sliderName .. ": " .. tostring(defaultValue)
	Information.TextColor3 = Color3.fromRGB(255, 255, 255)
	Information.TextScaled = true
	Information.TextSize = 14.000
	Information.TextTransparency = 0.300
	Information.TextWrapped = true
	Information.TextXAlignment = Enum.TextXAlignment.Left

	Shadow.Name = "Shadow"
	Shadow.Parent = Template
	Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
	Shadow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Shadow.BackgroundTransparency = 1.000
	Shadow.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Shadow.BorderSizePixel = 0
	Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
	Shadow.Size = UDim2.new(0.999999642, 0, 1.00000012, 0)
	Shadow.ZIndex = 150
	Shadow.Image = "rbxassetid://3602733521"
	Shadow.ImageColor3 = Color3.fromRGB(20, 20, 20)
	Shadow.ImageTransparency = 0.600

	UICorner_3.CornerRadius = UDim.new(0, 6)
	UICorner_3.Parent = Shadow

	Interact.Name = "Interact"
	Interact.Parent = Template
	Interact.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interact.BackgroundTransparency = 1.000
	Interact.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Interact.Size = UDim2.new(1, 0, 1, 0)
	Interact.ZIndex = 151
	Interact.Font = Enum.Font.SourceSans
	Interact.Text = ""
	Interact.TextColor3 = Color3.fromRGB(0, 0, 0)
	Interact.TextSize = 14.000

	-- Function to update the slider
	local function updateSlider(input)
		local scale = (input.Position.X - Template.AbsolutePosition.X) / Template.AbsoluteSize.X
		scale = math.clamp(scale, 0, 1)
		local value = math.floor(minValue + (scale * (maxValue - minValue) + 0.5))
		Progress.Size = UDim2.new(scale, 0, 1, 0)
		Information.Text = sliderName .. ": " .. tostring(value)
		if callback then
			callback(value)
		end
	end

	-- Function to handle input release
	local function onInputEnded(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			if releaseConnection then
				releaseConnection:Disconnect()
			end
			if moveConnection then
				moveConnection:Disconnect()
			end
		end
	end

	-- Event listeners for interaction
	Interact.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			updateSlider(input)
			moveConnection = game:GetService("UserInputService").InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					updateSlider(input)
				end
			end)
			releaseConnection = game:GetService("UserInputService").InputEnded:Connect(onInputEnded)
		end
	end)
end





	-- Assume Library is already defined as your GUI library
	local UserInputService = game:GetService("UserInputService")

-- Function to create the keybind GUI
function Library:Keybind(tab, keybindName, defaultKey, callback)
    -- Default values if not provided
    keybindName = keybindName or "Keybind"
    defaultKey = defaultKey or Enum.KeyCode.K
    callback = callback or function() end

    -- Create the keybind structure
    local Keybind = Instance.new("TextButton")
    Keybind.Name = keybindName
    Keybind.Parent = tab
    Keybind.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    Keybind.BorderColor3 = Color3.fromRGB(27, 42, 53)
    Keybind.Position = UDim2.new(0, 0, 0.4, 0)  -- Adjusted vertical position within parent
    Keybind.Selectable = false
    Keybind.Size = UDim2.new(0, 240, 0, 31)  -- Adjusted width to fit nicely within parent
    Keybind.AutoButtonColor = false
    Keybind.Text = ""

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = Keybind

    local TextLabel = Instance.new("TextLabel")
    TextLabel.Parent = Keybind
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.BorderColor3 = Color3.fromRGB(27, 42, 53)
    TextLabel.Size = UDim2.new(0.8, 0, 1, 0)  -- Adjusted width to fit within Keybind
    TextLabel.Position = UDim2.new(0, 10, 0, 0)  -- Adjusted left padding
    TextLabel.Font = Enum.Font.GothamMedium
    TextLabel.Text = keybindName
    TextLabel.TextColor3 = Color3.fromRGB(193, 193, 193)
    TextLabel.TextSize = 12.000
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left

    local Status = Instance.new("Frame")
    Status.Name = "Status"
    Status.Parent = Keybind
    Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Status.BackgroundTransparency = 1.000
    Status.BorderColor3 = Color3.fromRGB(27, 42, 53)
    Status.Position = UDim2.new(0.85, 0, 0, 0)  -- Adjusted position to align right
    Status.Size = UDim2.new(0.15, 0, 1, 0)  -- Adjusted width to fit within Keybind

    local TextLabel_2 = Instance.new("TextLabel")
    TextLabel_2.Parent = Status
    TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel_2.BackgroundTransparency = 1.000
    TextLabel_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
    TextLabel_2.Size = UDim2.new(1, 0, 1, 0)
    TextLabel_2.Font = Enum.Font.GothamMedium
    TextLabel_2.Text = tostring(defaultKey):gsub("Enum.KeyCode.", "")  -- Display default key
    TextLabel_2.TextColor3 = Color3.fromRGB(85, 85, 85)
    TextLabel_2.TextSize = 12.000
    TextLabel_2.TextXAlignment = Enum.TextXAlignment.Right

    -- Function to update keybind status
    local currentKey = defaultKey

    local function updateKeyLabel()
        TextLabel_2.Text = tostring(currentKey):gsub("Enum.KeyCode.", "")
    end

    local function onKeyPress(input, isProcessed)
        if isProcessed then return end -- Ignore inputs that are already processed
        if input.KeyCode == currentKey then
            callback()
        end
    end

    UserInputService.InputBegan:Connect(onKeyPress)

    Keybind.MouseButton1Click:Connect(function()
        TextLabel_2.Text = "..."
        local connection
        connection = UserInputService.InputBegan:Connect(function(input, isProcessed)
            if not isProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
                currentKey = input.KeyCode
                updateKeyLabel()
                connection:Disconnect()
            end
        end)
    end)

    return Keybind
end


function Library:Dropdown(tab, dropdownName, options, callback)
	-- Create Dropdown Template
	local DropdownTemplate = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local List = Instance.new("ScrollingFrame")
	local UIListLayout = Instance.new("UIListLayout")
	local Placeholder = Instance.new("Frame")
	local Selected = Instance.new("TextLabel")
	local Toggle = Instance.new("ImageButton")
	local Interact_2 = Instance.new("TextButton")
	local Title_2 = Instance.new("TextLabel")

	-- Set Dropdown Template properties
	DropdownTemplate.Name = "DropdownTemplate"
	DropdownTemplate.Parent = tab
	DropdownTemplate.BackgroundColor3 = Color3.fromRGB(35, 35, 35) -- Match button background color
	DropdownTemplate.BackgroundTransparency = 0.900
	DropdownTemplate.BorderColor3 = Color3.fromRGB(27, 42, 53)
	DropdownTemplate.BorderSizePixel = 0
	DropdownTemplate.Position = UDim2.new(0, 0, 0.439393938, 0) -- Match button position
	DropdownTemplate.Size = UDim2.new(1, -20, 0, 40) -- Match button size
	DropdownTemplate.ZIndex = 205

	UICorner.CornerRadius = UDim.new(0, 5)
	UICorner.Parent = DropdownTemplate

	List.Name = "List"
	List.Parent = DropdownTemplate
	List.Active = true
	List.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	List.BackgroundTransparency = 1.000
	List.BorderColor3 = Color3.fromRGB(27, 42, 53)
	List.BorderSizePixel = 0
	List.Position = UDim2.new(0, 0, 1, 0) -- Initially off-screen
	List.Size = UDim2.new(1, 0, 0, 116)
	List.Visible = false
	List.ZIndex = 205
	List.ScrollBarThickness = 2

	UIListLayout.Parent = List
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 5)

	Placeholder.Name = "Placeholder"
	Placeholder.Parent = List
	Placeholder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Placeholder.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Placeholder.BorderSizePixel = 0
	Placeholder.LayoutOrder = -100
	Placeholder.Position = UDim2.new(0.392, 0, 0, 0)
	Placeholder.ZIndex = 205

	Selected.Name = "Selected"
	Selected.Parent = DropdownTemplate
	Selected.AnchorPoint = Vector2.new(0.5, 0)
	Selected.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Selected.BackgroundTransparency = 1.000
	Selected.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Selected.BorderSizePixel = 0
	Selected.Position = UDim2.new(0, 0, 0, 0) -- Adjust as needed
	Selected.Size = UDim2.new(1, 0, 0, 16)
	Selected.ZIndex = 205
	Selected.Font = Enum.Font.GothamMedium
	Selected.Text = options[1]
	Selected.TextColor3 = Color3.fromRGB(240, 240, 240)
	Selected.TextScaled = true
	Selected.TextSize = 14.000
	Selected.TextTransparency = 0.500
	Selected.TextWrapped = true
	Selected.TextXAlignment = Enum.TextXAlignment.Left

	Toggle.Name = "Toggle"
	Toggle.Parent = DropdownTemplate
	Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
	Toggle.BackgroundTransparency = 1.000
	Toggle.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(1, -20, 0, 0) -- Adjust as needed
	Toggle.Size = UDim2.new(0, 32, 0, 32)
	Toggle.ZIndex = 205
	Toggle.Image = "rbxassetid://3926305904"
	Toggle.ImageColor3 = Color3.fromRGB(240, 240, 240)
	Toggle.ImageRectOffset = Vector2.new(564, 284)
	Toggle.ImageRectSize = Vector2.new(36, 36)
	Toggle.ImageTransparency = 0.500

	Interact_2.Name = "Interact"
	Interact_2.Parent = DropdownTemplate
	Interact_2.AnchorPoint = Vector2.new(0.5, 0.5)
	Interact_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interact_2.BackgroundTransparency = 1.000
	Interact_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Interact_2.BorderSizePixel = 0
	Interact_2.Position = UDim2.new(0, 203, 0, 21)
	Interact_2.Size = UDim2.new(0, 406, 0, 43)
	Interact_2.ZIndex = 210
	Interact_2.Font = Enum.Font.SourceSans
	Interact_2.Text = ""
	Interact_2.TextColor3 = Color3.fromRGB(0, 0, 0)
	Interact_2.TextSize = 14.000
	Interact_2.TextTransparency = 1.000

	Title_2.Name = "Title"
	Title_2.Parent = DropdownTemplate
	Title_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title_2.BackgroundTransparency = 1.000
	Title_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Title_2.BorderSizePixel = 0
	Title_2.Position = UDim2.new(0, 18, 0, 12)
	Title_2.Size = UDim2.new(0, 333, 0, 16)
	Title_2.ZIndex = 205
	Title_2.Font = Enum.Font.GothamMedium
	Title_2.Text = dropdownName
	Title_2.TextColor3 = Color3.fromRGB(240, 240, 240)
	Title_2.TextScaled = true
	Title_2.TextSize = 14.000
	Title_2.TextWrapped = true
	Title_2.TextXAlignment = Enum.TextXAlignment.Left

	-- Function to toggle dropdown visibility
	local function toggleDropdown()
		List.Visible = not List.Visible
	end

	-- Connect the toggle function to the button
	Toggle.MouseButton1Click:Connect(toggleDropdown)
	Interact_2.MouseButton1Click:Connect(toggleDropdown)

	-- Function to update the selected option
	local function updateSelected(option)
		Selected.Text = option
		List.Visible = false
		if callback then
			callback(option)
		end
	end

	-- Populate the dropdown with options
	for _, option in ipairs(options) do
		local OptionTemplate = Instance.new("Frame")
		local UICorner_2 = Instance.new("UICorner")
		local Title = Instance.new("TextLabel")
		local Interact = Instance.new("TextButton")

		OptionTemplate.Name = "OptionTemplate"
		OptionTemplate.Parent = List
		OptionTemplate.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		OptionTemplate.BorderColor3 = Color3.fromRGB(27, 42, 53)
		OptionTemplate.BorderSizePixel = 0
		OptionTemplate.Size = UDim2.new(1, 0, 0, 38)
		OptionTemplate.ZIndex = 205

		UICorner_2.CornerRadius = UDim.new(0, 5)
		UICorner_2.Parent = OptionTemplate

		Title.Name = "Title"
		Title.Parent = OptionTemplate
		Title.AnchorPoint = Vector2.new(0.5, 0.5)
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1.000
		Title.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Title.BorderSizePixel = 0
		Title.Position = UDim2.new(0.5, 0, 0.5, 0)
		Title.Size = UDim2.new(0, 297, 0, 14)
		Title.ZIndex = 205
		Title.Font = Enum.Font.GothamMedium
		Title.Text = option
		Title.TextColor3 = Color3.fromRGB(240, 240, 240)
		Title.TextScaled = true
		Title.TextSize = 14.000
		Title.TextWrapped = true
		Title.TextXAlignment = Enum.TextXAlignment.Left

		Interact.Name = "Interact"
		Interact.Parent = OptionTemplate
		Interact.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Interact.BackgroundTransparency = 1.000
		Interact.Size = UDim2.new(1, 0, 1, 0)
		 Interact.ZIndex = 210
		Interact.Font = Enum.Font.SourceSans
		Interact.Text = ""
		Interact.TextColor3 = Color3.fromRGB(0, 0, 0)
		Interact.TextSize = 1.000

		-- Connect the option click event
		Interact.MouseButton1Click:Connect(function()
			updateSelected(option)
		end)
	end

	-- Return the dropdown template
	return DropdownTemplate
end









	return Library
end
return Library


--UDim2.new(0.5, 0, 0.5, 0)
